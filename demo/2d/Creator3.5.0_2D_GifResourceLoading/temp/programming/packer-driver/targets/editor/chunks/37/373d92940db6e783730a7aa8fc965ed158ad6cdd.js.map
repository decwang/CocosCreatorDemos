{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/2d/Creator3.5.0_2D_GifResourceLoading/assets/GIF/CCGIF.ts"],"names":["_decorator","Component","Sprite","resources","assetManager","GIFCache","ccclass","property","executeInEditMode","requireComponent","CCGIF","delays","gifSp","frames","frameIdx","onLoad","node","getComponent","preload","getInstance","load","path","err","data","console","log","error","_nativeAsset","map","v","spriteFrames","loadUrl","url","loadAny","play","loop","playNext","self","stop","length","spriteFrame","scheduleOnce","unscheduleAllCallbacks"],"mappings":"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","sourcesContent":["import { _decorator, Component, Sprite, SpriteFrame, resources, assetManager, CCString } from 'cc';\nconst { ccclass, property ,executeInEditMode,requireComponent} = _decorator;\n\nimport { GIFCache } from \"./GIF\";\n@ccclass('CCGIF')\n// @executeInEditMode\n@requireComponent(Sprite)\nexport default class CCGIF extends Component {\n    @property\n    path: string = '';\n    \n    public delays = [];\n    public gifSp: Sprite;\n    public frames: SpriteFrame[] = [];\n\n    onLoad() {\n        this.gifSp = this.node.getComponent(Sprite);\n    }\n\n    preload() {\n        GIFCache.getInstance();\n\n        resources.load(this.path, (err, data: any) => {\n            console.log(err, data);\n            if (err) {\n                console.error(err,'加载失败');\n                return;\n            }\n            this.delays = data._nativeAsset.delays.map(v => v / 1e2);\n            this.frames = data._nativeAsset.spriteFrames;\n        });\n    }\n\n    loadUrl(url) {\n        GIFCache.getInstance();\n\n        assetManager.loadAny({ url: url }, (err, data: any) => {\n            console.log(err, data, '  data');\n            if (err) {\n                return;\n            }\n            this.delays = data.delays.map(v => v / 1e2);\n            this.frames = data.spriteFrames;\n            this.play(true);\n        })\n\n    }\n    frameIdx = 0;\n\n    /**\n     * 播放Gif\n     * @param loop 是否循环\n     * @param playNext 是否播放下一个\n     * @returns void\n     */\n    play(loop = false, playNext = false) {\n        let self = this;\n        if (!playNext) {\n            this.stop();\n        }\n        if (self.frames.length) {\n            if (self.frameIdx >= self.frames.length) {\n                self.frameIdx = 0;\n                if (!loop) {\n                    return;\n                }\n            }\n            self.gifSp.spriteFrame = self.frames[self.frameIdx];\n            // console.log(self.gifSp, '11111')\n            self.scheduleOnce(() => {\n                self.play(loop, true);\n            }, self.delays[self.frameIdx]);\n            self.frameIdx++;\n        }\n    }\n\n    stop() {\n        this.frameIdx = 0;\n        this.unscheduleAllCallbacks();\n    }\n}\n\n\n\n"]}