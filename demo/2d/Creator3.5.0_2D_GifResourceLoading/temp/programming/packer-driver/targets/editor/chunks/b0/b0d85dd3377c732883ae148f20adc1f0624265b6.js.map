{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/2d/Creator3.5.0_2D_GifResourceLoading/assets/GIF/LZW.ts"],"names":["LZW","decode","arr","min","clearCode","eofCode","size","dict","pos","clear","i","out","code","last","read","length","push","concat","Error","apply"],"mappings":";;;iBAKqBA,G;;;;;;;;;;;;;yBAAAA,G,GAAN,MAAMA,GAAN,CAAU;AACR,eAANC,MAAM,CAACC,GAAD,EAAMC,GAAN,EAAW;AACpB,cAAIC,SAAS,GAAG,KAAKD,GAArB;AAAA,cACIE,OAAO,GAAGD,SAAS,GAAG,CAD1B;AAAA,cAEIE,IAAI,GAAGH,GAAG,GAAG,CAFjB;AAAA,cAGII,IAAI,GAAG,EAHX;AAAA,cAIIC,GAAG,GAAG,CAJV;;AAMA,mBAASC,KAAT,GAAiB;AACb,gBAAIC,CAAJ;AACAH,YAAAA,IAAI,GAAG,EAAP;AACAD,YAAAA,IAAI,GAAGH,GAAG,GAAG,CAAb;;AACA,iBAAKO,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGN,SAAhB,EAA2BM,CAAC,EAA5B,EAAgC;AAC5BH,cAAAA,IAAI,CAACG,CAAD,CAAJ,GAAU,CAACA,CAAD,CAAV;AACH;;AACDH,YAAAA,IAAI,CAACH,SAAD,CAAJ,GAAkB,EAAlB;AACAG,YAAAA,IAAI,CAACF,OAAD,CAAJ,GAAgB,IAAhB;AACH;;AAED,mBAASJ,MAAT,GAAkB;AACd,gBAAIU,GAAG,GAAG,EAAV;AAAA,gBACIC,IADJ;AAAA,gBACUC,IADV;;AAEA,mBAAO,CAAP,EAAU;AACNA,cAAAA,IAAI,GAAGD,IAAP;AACAA,cAAAA,IAAI,GAAGE,IAAI,CAACR,IAAD,CAAX;;AACA,kBAAIM,IAAI,IAAIR,SAAZ,EAAuB;AACnBK,gBAAAA,KAAK;AACL;AACH;;AACD,kBAAIG,IAAI,IAAIP,OAAZ,EAAqB;AACjB;AACH;;AACD,kBAAIO,IAAI,GAAGL,IAAI,CAACQ,MAAhB,EAAwB;AACpB,oBAAIF,IAAI,KAAKT,SAAb,EAAwB;AACpBG,kBAAAA,IAAI,CAACS,IAAL,CAAUT,IAAI,CAACM,IAAD,CAAJ,CAAWI,MAAX,CAAkBV,IAAI,CAACK,IAAD,CAAJ,CAAW,CAAX,CAAlB,CAAV;AACH;AACJ,eAJD,MAIO;AACH,oBAAIA,IAAI,KAAKL,IAAI,CAACQ,MAAlB,EAA0B;AACtB,wBAAM,IAAIG,KAAJ,CAAU,SAAV,CAAN;AACH;;AACDX,gBAAAA,IAAI,CAACS,IAAL,CAAUT,IAAI,CAACM,IAAD,CAAJ,CAAWI,MAAX,CAAkBV,IAAI,CAACM,IAAD,CAAJ,CAAW,CAAX,CAAlB,CAAV;AACH;;AACDF,cAAAA,GAAG,CAACK,IAAJ,CAASG,KAAT,CAAeR,GAAf,EAAoBJ,IAAI,CAACK,IAAD,CAAxB;;AACA,kBAAIL,IAAI,CAACQ,MAAL,KAAiB,KAAKT,IAAtB,IAA+BA,IAAI,GAAG,EAA1C,EAA8C;AAC1CA,gBAAAA,IAAI;AACP;AACJ;;AACD,mBAAOK,GAAP;AACH;;AAED,mBAASG,IAAT,CAAcR,IAAd,EAAoB;AAChB,gBAAII,CAAJ;AAAA,gBAAOE,IAAI,GAAG,CAAd;;AACA,iBAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGJ,IAAhB,EAAsBI,CAAC,EAAvB,EAA2B;AACvB,kBAAIR,GAAG,CAACM,GAAG,IAAI,CAAR,CAAH,GAAgB,MAAMA,GAAG,GAAG,CAAZ,CAApB,EAAoC;AAChCI,gBAAAA,IAAI,IAAI,KAAKF,CAAb;AACH;;AACDF,cAAAA,GAAG;AACN;;AACD,mBAAOI,IAAP;AACH;;AACD,iBAAOX,MAAM,EAAb;AACH;;AA7DoB,O","sourcesContent":["// /**\n// * LZW编码解析\n// */\n\nimport { _decorator } from 'cc';\nexport default class LZW {\n    static decode(arr, min) {\n        let clearCode = 1 << min,\n            eofCode = clearCode + 1,\n            size = min + 1,\n            dict = [],\n            pos = 0;\n\n        function clear() {\n            let i;\n            dict = [];\n            size = min + 1;\n            for (i = 0; i < clearCode; i++) {\n                dict[i] = [i];\n            }\n            dict[clearCode] = [];\n            dict[eofCode] = null;\n        }\n\n        function decode() {\n            let out = [],\n                code, last;\n            while (1) {\n                last = code;\n                code = read(size);\n                if (code == clearCode) {\n                    clear();\n                    continue;\n                }\n                if (code == eofCode) {\n                    break;\n                }\n                if (code < dict.length) {\n                    if (last !== clearCode) {\n                        dict.push(dict[last].concat(dict[code][0]));\n                    }\n                } else {\n                    if (code !== dict.length) {\n                        throw new Error('LZW解析出错');\n                    }\n                    dict.push(dict[last].concat(dict[last][0]));\n                }\n                out.push.apply(out, dict[code]);\n                if (dict.length === (1 << size) && size < 12) {\n                    size++;\n                }\n            }\n            return out;\n        }\n\n        function read(size) {\n            let i, code = 0;\n            for (i = 0; i < size; i++) {\n                if (arr[pos >> 3] & 1 << (pos & 7)) {\n                    code |= 1 << i;\n                }\n                pos++;\n            }\n            return code;\n        }\n        return decode();\n    }\n}\n\n"]}