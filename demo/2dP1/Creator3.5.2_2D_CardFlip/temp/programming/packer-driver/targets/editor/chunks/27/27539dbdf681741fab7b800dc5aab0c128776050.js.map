{"version":3,"sources":["file:///Users/mu/Desktop/Creator3.5.2_2D_CardFlip/assets/eazax-ccc/components/ScreenAdapter.ts"],"names":["_decorator","Component","EventManager","ccclass","executionOrder","help","menu","ScreenAdapter","onLoad","init","onEnable","adapt","cc","view","setResizeCallback","onResize","emit","winSize","screenRatio","width","height","designResolution","Canvas","instance","designRatio","setFitWidth","setFitHeight","canvas","fitHeight","fitWidth"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAGdC,MAAAA,Y;;;;;;;OAFD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,cAAX;AAA2BC,QAAAA,IAA3B;AAAiCC,QAAAA;AAAjC,O,GAA0CN,U;;yBAY3BO,a,KATrB;AACA;AACA;AACA;AACA;AACA;aAECJ,OAAO,CAAC,eAAD,C,UACPC,cAAc,CAAC,CAAC,CAAF,C,UAAKC,IAAI,CAAC,8EAAD,C,UAAiFC,IAAI,CAAC,0BAAD,C,6DAD7G,MAEqBC,aAFrB,SAE2CN,SAF3C,CAEqD;AACrD;AACA;AACA;AACcO,QAAAA,MAAM,GAAG;AACf,eAAKC,IAAL;AACH,SANgD,CAOrD;AACA;AACA;;;AACcC,QAAAA,QAAQ,GAAG;AACjB,eAAKC,KAAL;AACH,SAZgD,CAarD;AACA;AACA;;;AACcF,QAAAA,IAAI,GAAG;AACrB;AACQG,UAAAA,EAAE,CAACC,IAAH,CAAQC,iBAAR,CAA0B,MAAM,KAAKC,QAAL,EAAhC;AACH,SAnBgD,CAoBrD;AACA;AACA;;;AACcA,QAAAA,QAAQ,GAAG;AACzB;AACA;AACQ;AAAA;AAAA,4CAAaC,IAAb,CAAkB,aAAlB,EAHiB,CAIzB;;AACQ,eAAKL,KAAL;AACH,SA7BgD,CA8BrD;AACA;AACA;;;AACcA,QAAAA,KAAK,GAAG;AACtB;AACQ,gBAAMM,OAAO,GAAGL,EAAE,CAACK,OAAnB;AAAA,gBACAC,WAAW,GAAGD,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACG,MADtC,CAFc,CAItB;;AACQ,gBAAMC,gBAAgB,GAAGT,EAAE,CAACU,MAAH,CAAUC,QAAV,CAAmBF,gBAA5C;AAAA,gBACAG,WAAW,GAAGH,gBAAgB,CAACF,KAAjB,GAAyBE,gBAAgB,CAACD,MADxD,CALc,CAOtB;;AACQ,cAAIF,WAAW,IAAI,CAAnB,EAAsB;AAC9B;AACQ,gBAAIA,WAAW,IAAIM,WAAnB,EAAgC;AAChC,mBAAKC,WAAL;AACC,aAFD,MAEO;AACf;AACA;AACQ,mBAAKC,YAAL;AACC;AACA,WATD,MASO;AACf;AACQ,iBAAKA,YAAL;AACC;AACJ,SAtDgD,CAuDrD;AACA;AACA;;;AACcA,QAAAA,YAAY,GAAG;AACrB,gBAAMC,MAAM,GAAGf,EAAE,CAACU,MAAH,CAAUC,QAAzB;AACAI,UAAAA,MAAM,CAACC,SAAP,GAAmB,IAAnB;AACAD,UAAAA,MAAM,CAACE,QAAP,GAAkB,KAAlB;AACH,SA9DgD,CA+DrD;AACA;AACA;;;AACcJ,QAAAA,WAAW,GAAG;AACpB,gBAAME,MAAM,GAAGf,EAAE,CAACU,MAAH,CAAUC,QAAzB;AACAI,UAAAA,MAAM,CAACC,SAAP,GAAmB,KAAnB;AACAD,UAAAA,MAAM,CAACE,QAAP,GAAkB,IAAlB;AACH;;AAtEgD,O","sourcesContent":["import { _decorator, Component } from 'cc';\nconst { ccclass, executionOrder, help, menu } = _decorator;\n\nimport EventManager from \"../core/EventManager\";\n// /**\n// * 屏幕适配组件\n// * @author 陈皮皮 (ifaswind)\n// * @version 20210504\n// * @see ScreenAdapter.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/ScreenAdapter.ts\n// */\n\n@ccclass('ScreenAdapter')\n@executionOrder(-1)@help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/ScreenAdapter.ts')@menu('eazax/其他组件/ScreenAdapter')\nexport default class ScreenAdapter extends Component {\n// /**\n// * 生命周期：加载\n// */\n    protected onLoad() {\n        this.init();\n    }\n// /**\n// * 生命周期：组件启用\n// */\n    protected onEnable() {\n        this.adapt();\n    }\n// /**\n// * 初始化\n// */\n    protected init() {\n// // 设置游戏窗口变化的回调（仅 Web 平台有效）\n        cc.view.setResizeCallback(() => this.onResize());\n    }\n// /**\n// * 窗口变化回调\n// */\n    protected onResize() {\n// // 由于 setResizeCallback 只能设置一个回调\n// // 使用事件系统发送一个特定事件，让其他组件也可以监听到窗口变化\n        EventManager.emit('view-resize');\n// // 适配\n        this.adapt();\n    }\n// /**\n// * 适配\n// */\n    protected adapt() {\n// // 实际屏幕比例\n        const winSize = cc.winSize,\n        screenRatio = winSize.width / winSize.height;\n// // 设计比例\n        const designResolution = cc.Canvas.instance.designResolution,\n        designRatio = designResolution.width / designResolution.height;\n// // 判断实际屏幕宽高比\n        if (screenRatio <= 1) {\n// // 此时屏幕高度大于宽度\n        if (screenRatio <= designRatio) {\n        this.setFitWidth();\n        } else {\n// // 此时实际屏幕比例大于设计比例\n// // 为了保证纵向的游戏内容不受影响，应使用 fitHeight 模式\n        this.setFitHeight();\n        }\n        } else {\n// // 此时屏幕高度小于宽度\n        this.setFitHeight();\n        }\n    }\n// /**\n// * 适配高度模式\n// */\n    protected setFitHeight() {\n        const canvas = cc.Canvas.instance;\n        canvas.fitHeight = true;\n        canvas.fitWidth = false;\n    }\n// /**\n// * 适配宽度模式\n// */\n    protected setFitWidth() {\n        const canvas = cc.Canvas.instance;\n        canvas.fitHeight = false;\n        canvas.fitWidth = true;\n    }\n}\n\n\n/**\n * 注意：已把原脚本注释，由于脚本变动过大，转换的时候可能有遗落，需要自行手动转换\n */\n// import EventManager from \"../core/EventManager\";\r\n// \r\n// const { ccclass, executionOrder, help, menu } = cc._decorator;\r\n// \r\n// /**\r\n//  * 屏幕适配组件\r\n//  * @author 陈皮皮 (ifaswind)\r\n//  * @version 20210504\r\n//  * @see ScreenAdapter.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/ScreenAdapter.ts\r\n//  */\r\n// @ccclass\r\n// @executionOrder(-1)\r\n// @help('https://gitee.com/ifaswind/eazax-ccc/blob/master/components/ScreenAdapter.ts')\r\n// @menu('eazax/其他组件/ScreenAdapter')\r\n// export default class ScreenAdapter extends cc.Component {\r\n// \r\n//     /**\r\n//      * 生命周期：加载\r\n//      */\r\n//     protected onLoad() {\r\n//         this.init();\r\n//     }\r\n// \r\n//     /**\r\n//      * 生命周期：组件启用\r\n//      */\r\n//     protected onEnable() {\r\n//         this.adapt();\r\n//     }\r\n// \r\n//     /**\r\n//      * 初始化\r\n//      */\r\n//     protected init() {\r\n//         // 设置游戏窗口变化的回调（仅 Web 平台有效）\r\n//         cc.view.setResizeCallback(() => this.onResize());\r\n//     }\r\n// \r\n//     /**\r\n//      * 窗口变化回调\r\n//      */\r\n//     protected onResize() {\r\n//         // 由于 setResizeCallback 只能设置一个回调\r\n//         // 使用事件系统发送一个特定事件，让其他组件也可以监听到窗口变化\r\n//         EventManager.emit('view-resize');\r\n//         // 适配\r\n//         this.adapt();\r\n//     }\r\n// \r\n//     /**\r\n//      * 适配\r\n//      */\r\n//     protected adapt() {\r\n//         // 实际屏幕比例\r\n//         const winSize = cc.winSize,\r\n//             screenRatio = winSize.width / winSize.height;\r\n//         // 设计比例\r\n//         const designResolution = cc.Canvas.instance.designResolution,\r\n//             designRatio = designResolution.width / designResolution.height;\r\n//         // 判断实际屏幕宽高比\r\n//         if (screenRatio <= 1) {\r\n//             // 此时屏幕高度大于宽度\r\n//             if (screenRatio <= designRatio) {\r\n//                 this.setFitWidth();\r\n//             } else {\r\n//                 // 此时实际屏幕比例大于设计比例\r\n//                 // 为了保证纵向的游戏内容不受影响，应使用 fitHeight 模式\r\n//                 this.setFitHeight();\r\n//             }\r\n//         } else {\r\n//             // 此时屏幕高度小于宽度\r\n//             this.setFitHeight();\r\n//         }\r\n//     }\r\n// \r\n//     /**\r\n//      * 适配高度模式\r\n//      */\r\n//     protected setFitHeight() {\r\n//         const canvas = cc.Canvas.instance;\r\n//         canvas.fitHeight = true;\r\n//         canvas.fitWidth = false;\r\n//     }\r\n// \r\n//     /**\r\n//      * 适配宽度模式\r\n//      */\r\n//     protected setFitWidth() {\r\n//         const canvas = cc.Canvas.instance;\r\n//         canvas.fitHeight = false;\r\n//         canvas.fitWidth = true;\r\n//     }\r\n// \r\n// }\n"]}