{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/2dP1/Creator3.5.2_2D_CardFlip/assets/scripts/TweenUtil.ts"],"names":["TweenUtil","tween","Vec3","flip","node","duration","onMiddle","onComplete","Promise","res","t","time","scale","skewY","x","parallel","to","y","z","easing","call","start"],"mappings":";;;8BAOqBA,S;;;;;;;AADMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;;;;;;yBACbF,S,GAAN,MAAMA,SAAN,CAAgB;AAC3B;AACJ;AACA;AACA;AACA;AACA;AACA;AACsB,eAAJG,IAAI,CAACC,IAAD,EAAaC,QAAb,EAA+BC,QAA/B,EAAoDC,UAApD,EAA0F;AACxG,iBAAO,IAAIC,OAAJ,CAAkBC,GAAG,IAAI;AAC5B,kBAAMC,CAAC,GAAGT,KAAV;AAAA,kBACAU,IAAI,GAAGN,QAAQ,GAAG,CADlB;AAAA,kBAEAO,KAAK,GAAGR,IAAI,CAACQ,KAFb;AAAA,kBAGAC,KAAK,GAAGD,KAAK,CAACE,CAAN,GAAU,CAAV,GAAc,EAAd,GAAmB,CAAC,EAH5B;AAIAJ,YAAAA,CAAC,CAACN,IAAD,CAAD,CACKW,QADL,CAEQL,CAAC,GAAGM,EAAJ,CAAOL,IAAP,EAAa;AAAEC,cAAAA,KAAK,EAAE,IAAIV,IAAJ,CAAS,CAAT,EAAYU,KAAK,CAACK,CAAlB,EAAqBL,KAAK,CAACM,CAA3B;AAAT,aAAb,EAAuD;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAAvD,CAFR,CAGQ;AAHR,cAKKC,IALL,CAKU,MAAM;AACRd,cAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACH,aAPL,EAQKS,QARL,CASQL,CAAC,GAAGM,EAAJ,CAAOL,IAAP,EAAa;AAAEC,cAAAA,KAAK,EAAE,IAAIV,IAAJ,CAAS,CAACU,KAAK,CAACE,CAAhB,EAAmBF,KAAK,CAACK,CAAzB,EAA4BL,KAAK,CAACM,CAAlC;AAAT,aAAb,EAA8D;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAA9D,CATR,CAUQ;AAVR,cAYKC,IAZL,CAYU,MAAM;AACRb,cAAAA,UAAU,IAAIA,UAAU,EAAxB;AACAE,cAAAA,GAAG;AACN,aAfL,EAgBKY,KAhBL;AAiBH,WAtBM,CAAP;AAuBH;;AAhC0B,O","sourcesContent":["/**\n* Tween 工具\n* @author 陈皮皮 (ifaswind)\n* @version 20210320\n*/\n\nimport { _decorator, Node, tween, Vec3 } from 'cc';\nexport default class TweenUtil {\n    /**\n    * 水平翻转（卡片翻转）\n    * @param node 节点\n    * @param duration 总时长\n    * @param onMiddle 中间状态回调\n    * @param onComplete 完成回调\n    */\n    public static flip(node: Node, duration: number, onMiddle?: Function, onComplete?: Function): Promise<void> {\n        return new Promise<void>(res => {\n            const t = tween,\n            time = duration / 2,\n            scale = node.scale,\n            skewY = scale.x > 0 ? 20 : -20;\n            t(node)\n                .parallel(\n                    t().to(time, { scale: new Vec3(0, scale.y, scale.z) }, { easing: 'quadIn' }),\n                    // t().to(time, { skewY: -skewY }, { easing: 'quadOut' }),\n                )\n                .call(() => {\n                    onMiddle && onMiddle();\n                })\n                .parallel(\n                    t().to(time, { scale: new Vec3(-scale.x, scale.y, scale.z) }, { easing: 'quadOut' }),\n                    // t().to(time, { skewY: 0 }, { easing: 'quadIn' }),\n                )\n                .call(() => {\n                    onComplete && onComplete();\n                    res();\n                })\n                .start();\n        });\n    }\n}\n"]}