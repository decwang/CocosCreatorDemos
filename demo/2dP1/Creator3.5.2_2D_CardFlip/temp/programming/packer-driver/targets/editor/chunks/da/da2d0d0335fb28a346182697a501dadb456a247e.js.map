{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/2dP1/Creator3.5.2_2D_CardFlip/assets/scripts/ResPopup.ts"],"names":["_decorator","Node","Prefab","PopupBase","ResPopupItem","ccclass","property","ResPopup","items","path","onLoad","registerEvent","onDestroy","unregisterEvent","closeBtn","on","cc","EventType","TOUCH_END","onCloseBtnClick","off","updateDisplay","options","existedItems","optionItems","filter","v","name","url","count","Math","max","length","i","node","instantiate","item","setParent","content","getComponent","set","active","push","hide"],"mappings":"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","sourcesContent":["import { _decorator, components, Node, Prefab } from 'cc';\nconst { ccclass, property } = _decorator;\n\nimport PopupBase from \"../../../../../eazax-ccomponents/popups/PopupBase\";\nimport ResPopupItem from \"./ResPopupItem\";\n// /**\n// * 资源展示弹窗\n// */\n// /**\n// * 资源弹窗选项类型\n// */\nexport type ResPopupOptions = {\n    items: {\n        name: string;\n        url: string\n    }[];\n}\n\n@ccclass('ResPopup')\nexport default class ResPopup extends PopupBase<ResPopupOptions> {\n    @property(Node)\n    protected closeBtn: Node | null = null;\n    @property(Node)\n    protected content: Node | null = null;\n    @property(Prefab)\n    protected item: Prefab | null = null;\n// /**\n// * 物体\n// */\n    protected items: ResPopupItem[] = [];\n// /**\n// * 资源弹窗路径\n// */\n    public static get path() {\n        return 'prefabs/ResPopup';\n    }\n// /**\n// * 生命周期：加载\n// */\n    protected onLoad() {\n        this.registerEvent();\n    }\n// /**\n// * 生命周期：销毁\n// */\n    protected onDestroy() {\n        this.unregisterEvent();\n    }\n// /**\n// * 注册事件\n// */\n    protected registerEvent() {\n        this.closeBtn.on(cc.Node.EventType.TOUCH_END, this.onCloseBtnClick, this);\n    }\n// /**\n// * 反注册事件\n// */\n    protected unregisterEvent() {\n        this.closeBtn.off(cc.Node.EventType.TOUCH_END, this.onCloseBtnClick, this);\n    }\n// /**\n// * 更新显示\n// * @param options\n// */\n    protected updateDisplay(options: ResPopupOptions) {\n        const existedItems = this.items,\n        optionItems = options.items.filter((v) => (v.name !== '' || v.url !== '')),\n        count = Math.max(optionItems.length, existedItems.length);\n        for (let i = 0; i < count; i++) {\n// // 新生成\n        if (optionItems[i] && !existedItems[i]) {\n// // 生成节点\n        const node = cc.instantiate(this.item);\n        node.setParent(this.content);\n// // 设置组件\n        const item = node.getComponent(ResPopupItem);\n        item.set(optionItems[i].name, optionItems[i].url);\n        item.node.active = true;\n        existedItems.push(item);\n        }\n// // 复用\n        else if (optionItems[i] && existedItems[i]) {\n// // 复用组件\n        const item = existedItems[i];\n        item.set(optionItems[i].name, optionItems[i].url);\n        item.node.active = true;\n        }\n// // 隐藏\n        else {\n// // 隐藏节点\n        existedItems[i].node.active = false;\n        }\n        }\n    }\n// /**\n// * 关闭按钮点击回调\n// */\n    protected onCloseBtnClick() {\n        this.hide();\n    }\n}\n\n\n/**\n * 注意：已把原脚本注释，由于脚本变动过大，转换的时候可能有遗落，需要自行手动转换\n */\n// import PopupBase from \"../../../../../eazax-ccc/components/popups/PopupBase\";\n// import ResPopupItem from \"./ResPopupItem\";\n// \n// const { ccclass, property } = cc._decorator;\n// \n// /**\n//  * 资源展示弹窗\n//  */\n// @ccclass\n// export default class ResPopup extends PopupBase<ResPopupOptions> {\n// \n//     @property(cc.Node)\n//     protected closeBtn: cc.Node = null;\n// \n//     @property(cc.Node)\n//     protected content: cc.Node = null;\n// \n//     @property(cc.Prefab)\n//     protected item: cc.Prefab = null;\n// \n//     /**\n//      * 物体\n//      */\n//     protected items: ResPopupItem[] = [];\n// \n//     /**\n//      * 资源弹窗路径\n//      */\n//     public static get path() {\n//         return 'prefabs/ResPopup';\n//     }\n// \n//     /**\n//      * 生命周期：加载\n//      */\n//     protected onLoad() {\n//         this.registerEvent();\n//     }\n// \n//     /**\n//      * 生命周期：销毁\n//      */\n//     protected onDestroy() {\n//         this.unregisterEvent();\n//     }\n// \n//     /**\n//      * 注册事件\n//      */\n//     protected registerEvent() {\n//         this.closeBtn.on(cc.Node.EventType.TOUCH_END, this.onCloseBtnClick, this);\n//     }\n// \n//     /**\n//      * 反注册事件\n//      */\n//     protected unregisterEvent() {\n//         this.closeBtn.off(cc.Node.EventType.TOUCH_END, this.onCloseBtnClick, this);\n//     }\n// \n//     /**\n//      * 更新显示\n//      * @param options \n//      */\n//     protected updateDisplay(options: ResPopupOptions) {\n//         const existedItems = this.items,\n//             optionItems = options.items.filter((v) => (v.name !== '' || v.url !== '')),\n//             count = Math.max(optionItems.length, existedItems.length);\n//         for (let i = 0; i < count; i++) {\n//             // 新生成\n//             if (optionItems[i] && !existedItems[i]) {\n//                 // 生成节点\n//                 const node = cc.instantiate(this.item);\n//                 node.setParent(this.content);\n//                 // 设置组件\n//                 const item = node.getComponent(ResPopupItem);\n//                 item.set(optionItems[i].name, optionItems[i].url);\n//                 item.node.active = true;\n//                 existedItems.push(item);\n//             }\n//             // 复用\n//             else if (optionItems[i] && existedItems[i]) {\n//                 // 复用组件\n//                 const item = existedItems[i];\n//                 item.set(optionItems[i].name, optionItems[i].url);\n//                 item.node.active = true;\n//             }\n//             // 隐藏\n//             else {\n//                 // 隐藏节点\n//                 existedItems[i].node.active = false;\n//             }\n//         }\n//     }\n// \n//     /**\n//      * 关闭按钮点击回调\n//      */\n//     protected onCloseBtnClick() {\n//         this.hide();\n//     }\n// \n// }\n// \n// /**\n//  * 资源弹窗选项类型\n//  */\n// export type ResPopupOptions = {\n//     items: {\n//         name: string;\n//         url: string\n//     }[];\n// }\n"]}