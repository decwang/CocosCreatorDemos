{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/2dP1/Creator3.5.2_2D_CardFlip/assets/scripts/PopupBase.ts"],"names":["_decorator","Component","Node","ccclass","property","PopupBase","type","tooltip","CC_DEV","animationDuration","blocker","options","finishCallback","show","duration","init","updateDisplay","onBeforeShow","undefined","playShowAnimation","onAfterShow","hide","suspended","node","cc","addComponent","BlockInputEvents","setParent","setContentSize","getContentSize","active","onBeforeHide","playHideAnimation","onAfterHide","Promise","res","background","main","opacity","scale","tween","to","start","easing","call","delay","onSuspended"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n// /**\n// * 弹窗基类\n// * @author 陈皮皮 (ifaswind)\n// * @version 20220122\n// * @see PopupBase.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/popups/PopupBase.ts\n// * @see PopupManager.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/PopupManager.ts\n// */\n\n@ccclass('PopupBase')\nexport default class PopupBase<Options = any> extends Component {\n    @property({ type: Node, tooltip: CC_DEV && '背景遮罩' })\n    public background: Node | null = null;\n    @property({ type: Node, tooltip: CC_DEV && '弹窗主体' })\n    public main: Node | null = null;\n// /**\n// * 展示/隐藏动画的时长\n// */\n    public animationDuration: number = 0.3;\n// /**\n// * 用于拦截点击的节点\n// */\n    protected blocker: Node | null = null;\n// /**\n// * 弹窗选项\n// */\n    protected options: Options = null;\n// /**\n// * 展示弹窗\n// * @param options 弹窗选项\n// * @param duration 动画时长\n// */\n    public async show(options?: Options, duration?: number) {\n// // 储存选项\n        this.options = options;\n// // 初始化\n        this.init(options);\n// // 更新样式\n        this.updateDisplay(options);\n// // 弹窗回调\n        this.onBeforeShow && await this.onBeforeShow();\n// // 展示动画\n        if (duration == undefined) {\n        duration = duration < 0 ? 0 : this.animationDuration;\n        }\n        await this.playShowAnimation(duration);\n// // 弹窗回调\n        this.onAfterShow && this.onAfterShow();\n    }\n// /**\n// * 隐藏弹窗\n// * @param suspended 是否被挂起\n// * @param duration 动画时长\n// */\n    public async hide(suspended: boolean = false, duration?: number) {\n        const node = this.node;\n// // 动画时长不为 0 时拦截点击事件（避免误操作）\n        if (duration !== 0) {\n        let blocker = this.blocker;\n        if (!blocker) {\n        blocker = this.blocker = new cc.Node('blocker');\n        blocker.addComponent(cc.BlockInputEvents);\n        blocker.setParent(node);\n        blocker.setContentSize(node.getContentSize());\n        }\n        blocker.active = true;\n        }\n// // 弹窗回调\n        this.onBeforeHide && await this.onBeforeHide(suspended);\n// // 播放隐藏动画\n        if (duration == undefined) {\n        duration = duration < 0 ? 0 : this.animationDuration;\n        }\n        await this.playHideAnimation(duration);\n// // 关闭拦截\n        this.blocker && (this.blocker.active = false);\n// // 关闭节点\n        node.active = false;\n// // 弹窗回调\n        this.onAfterHide && this.onAfterHide(suspended);\n// // 弹窗完成回调\n        this.finishCallback && this.finishCallback(suspended);\n    }\n// /**\n// * 播放弹窗展示动画（派生类请重写此函数以实现自定义逻辑）\n// * @param duration 动画时长\n// */\n    protected playShowAnimation(duration: number): Promise<void> {\n        return new Promise<void>(res => {\n// // 初始化节点\n        const background = this.background,\n        main = this.main;\n        this.node.active = true;\n        background.active = true;\n        background.opacity = 0;\n        main.active = true;\n        main.scale = 0.5;\n        main.opacity = 0;\n// // 背景遮罩\n        cc.tween(background)\n        .to(duration * 0.5, { opacity: 150 })\n        .start();\n// // 弹窗主体\n        cc.tween(main)\n        .to(duration, { scale: 1, opacity: 255 }, { easing: 'backOut' })\n        .call(res)\n        .start();\n        });\n    }\n// /**\n// * 播放弹窗隐藏动画（派生类请重写此函数以实现自定义逻辑）\n// * @param duration 动画时长\n// */\n    protected playHideAnimation(duration: number): Promise<void> {\n        return new Promise<void>(res => {\n// // 背景遮罩\n        cc.tween(this.background)\n        .delay(duration * 0.5)\n        .to(duration * 0.5, { opacity: 0 })\n        .start();\n// // 弹窗主体\n        cc.tween(this.main)\n        .to(duration, { scale: 0.5, opacity: 0 }, { easing: 'backIn' })\n        .call(res)\n        .start();\n        });\n    }\n// /**\n// * 初始化（派生类请重写此函数以实现自定义逻辑）\n// * @param options 弹窗选项\n// */\n    protected init(options: Options) {\n\n    }\n// /**\n// * 更新样式（派生类请重写此函数以实现自定义逻辑）\n// * @param options 弹窗选项\n// */\n    protected updateDisplay(options: Options) {\n\n    }\n// /**\n// * 弹窗展示前（派生类请重写此函数以实现自定义逻辑）\n// */\n    protected onBeforeShow(): Promise<void> {\n        return new Promise(res => res());\n    }\n// /**\n// * 弹窗展示后（派生类请重写此函数以实现自定义逻辑）\n// */\n    protected onAfterShow() {\n\n    }\n// /**\n// * 弹窗隐藏前（派生类请重写此函数以实现自定义逻辑）\n// * @param suspended 是否被挂起\n// */\n    protected onBeforeHide(suspended: boolean): Promise<void> {\n        return new Promise(res => res());\n    }\n// /**\n// * 弹窗隐藏后（派生类请重写此函数以实现自定义逻辑）\n// * @param suspended 是否被挂起\n// */\n    protected onAfterHide(suspended: boolean) {\n\n    }\n// /**\n// * 弹窗被挂起（派生类请重写此函数以实现自定义逻辑）\n// */\n    protected onSuspended(): Promise<void> {\n        return new Promise(res => res());\n    }\n// /**\n// * 弹窗流程结束回调（注意：该回调为 PopupManager 专用，重写 hide 函数时记得调用该回调）\n// */\n    protected finishCallback: (suspended: boolean) => void = null;\n}\n\n\n/**\n * 注意：已把原脚本注释，由于脚本变动过大，转换的时候可能有遗落，需要自行手动转换\n */\n// const { ccclass, property } = cc._decorator;\n// \n// /**\n//  * 弹窗基类\n//  * @author 陈皮皮 (ifaswind)\n//  * @version 20220122\n//  * @see PopupBase.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/popups/PopupBase.ts\n//  * @see PopupManager.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/core/PopupManager.ts\n//  */\n// @ccclass\n// export default class PopupBase<Options = any> extends cc.Component {\n// \n//     @property({ type: cc.Node, tooltip: CC_DEV && '背景遮罩' })\n//     public background: cc.Node = null;\n// \n//     @property({ type: cc.Node, tooltip: CC_DEV && '弹窗主体' })\n//     public main: cc.Node = null;\n// \n//     /**\n//      * 展示/隐藏动画的时长\n//      */\n//     public animationDuration: number = 0.3;\n// \n//     /**\n//      * 用于拦截点击的节点\n//      */\n//     protected blocker: cc.Node = null;\n// \n//     /**\n//      * 弹窗选项\n//      */\n//     protected options: Options = null;\n// \n//     /**\n//      * 展示弹窗\n//      * @param options 弹窗选项\n//      * @param duration 动画时长\n//      */\n//     public async show(options?: Options, duration?: number) {\n//         // 储存选项\n//         this.options = options;\n//         // 初始化\n//         this.init(options);\n//         // 更新样式\n//         this.updateDisplay(options);\n//         // 弹窗回调\n//         this.onBeforeShow && await this.onBeforeShow();\n//         // 展示动画\n//         if (duration == undefined) {\n//             duration = duration < 0 ? 0 : this.animationDuration;\n//         }\n//         await this.playShowAnimation(duration);\n//         // 弹窗回调\n//         this.onAfterShow && this.onAfterShow();\n//     }\n// \n//     /**\n//      * 隐藏弹窗\n//      * @param suspended 是否被挂起\n//      * @param duration 动画时长\n//      */\n//     public async hide(suspended: boolean = false, duration?: number) {\n//         const node = this.node;\n//         // 动画时长不为 0 时拦截点击事件（避免误操作）\n//         if (duration !== 0) {\n//             let blocker = this.blocker;\n//             if (!blocker) {\n//                 blocker = this.blocker = new cc.Node('blocker');\n//                 blocker.addComponent(cc.BlockInputEvents);\n//                 blocker.setParent(node);\n//                 blocker.setContentSize(node.getContentSize());\n//             }\n//             blocker.active = true;\n//         }\n//         // 弹窗回调\n//         this.onBeforeHide && await this.onBeforeHide(suspended);\n//         // 播放隐藏动画\n//         if (duration == undefined) {\n//             duration = duration < 0 ? 0 : this.animationDuration;\n//         }\n//         await this.playHideAnimation(duration);\n//         // 关闭拦截\n//         this.blocker && (this.blocker.active = false);\n//         // 关闭节点\n//         node.active = false;\n//         // 弹窗回调\n//         this.onAfterHide && this.onAfterHide(suspended);\n//         // 弹窗完成回调\n//         this.finishCallback && this.finishCallback(suspended);\n//     }\n// \n//     /**\n//      * 播放弹窗展示动画（派生类请重写此函数以实现自定义逻辑）\n//      * @param duration 动画时长\n//      */\n//     protected playShowAnimation(duration: number): Promise<void> {\n//         return new Promise<void>(res => {\n//             // 初始化节点\n//             const background = this.background,\n//                 main = this.main;\n//             this.node.active = true;\n//             background.active = true;\n//             background.opacity = 0;\n//             main.active = true;\n//             main.scale = 0.5;\n//             main.opacity = 0;\n//             // 背景遮罩\n//             cc.tween(background)\n//                 .to(duration * 0.5, { opacity: 150 })\n//                 .start();\n//             // 弹窗主体\n//             cc.tween(main)\n//                 .to(duration, { scale: 1, opacity: 255 }, { easing: 'backOut' })\n//                 .call(res)\n//                 .start();\n//         });\n//     }\n// \n//     /**\n//      * 播放弹窗隐藏动画（派生类请重写此函数以实现自定义逻辑）\n//      * @param duration 动画时长\n//      */\n//     protected playHideAnimation(duration: number): Promise<void> {\n//         return new Promise<void>(res => {\n//             // 背景遮罩\n//             cc.tween(this.background)\n//                 .delay(duration * 0.5)\n//                 .to(duration * 0.5, { opacity: 0 })\n//                 .start();\n//             // 弹窗主体\n//             cc.tween(this.main)\n//                 .to(duration, { scale: 0.5, opacity: 0 }, { easing: 'backIn' })\n//                 .call(res)\n//                 .start();\n//         });\n//     }\n// \n//     /**\n//      * 初始化（派生类请重写此函数以实现自定义逻辑）\n//      * @param options 弹窗选项\n//      */\n//     protected init(options: Options) {\n// \n//     }\n// \n//     /**\n//      * 更新样式（派生类请重写此函数以实现自定义逻辑）\n//      * @param options 弹窗选项\n//      */\n//     protected updateDisplay(options: Options) {\n// \n//     }\n// \n//     /**\n//      * 弹窗展示前（派生类请重写此函数以实现自定义逻辑）\n//      */\n//     protected onBeforeShow(): Promise<void> {\n//         return new Promise(res => res());\n//     }\n// \n//     /**\n//      * 弹窗展示后（派生类请重写此函数以实现自定义逻辑）\n//      */\n//     protected onAfterShow() {\n// \n//     }\n// \n//     /**\n//      * 弹窗隐藏前（派生类请重写此函数以实现自定义逻辑）\n//      * @param suspended 是否被挂起\n//      */\n//     protected onBeforeHide(suspended: boolean): Promise<void> {\n//         return new Promise(res => res());\n//     }\n// \n//     /**\n//      * 弹窗隐藏后（派生类请重写此函数以实现自定义逻辑）\n//      * @param suspended 是否被挂起\n//      */\n//     protected onAfterHide(suspended: boolean) {\n// \n//     }\n// \n//     /**\n//      * 弹窗被挂起（派生类请重写此函数以实现自定义逻辑）\n//      */\n//     protected onSuspended(): Promise<void> {\n//         return new Promise(res => res());\n//     }\n// \n//     /**\n//      * 弹窗流程结束回调（注意：该回调为 PopupManager 专用，重写 hide 函数时记得调用该回调）\n//      */\n//     protected finishCallback: (suspended: boolean) => void = null;\n// \n// }\n"]}