{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/2dP1/Creator3.5.2_2D_CardFlip/assets/scripts/CardFlip.ts"],"names":["_decorator","Node","Component","Button","Color","Sprite","DEV","TweenUtil","ccclass","property","CardFlip","displayName","type","button","frontColor","WHITE","backColor","GRAY","onLoad","flipBtn","getComponent","addComponent","start","spf","card","color","setButtonState","onFlipBtnClick","console","log","interactable","flip","equals"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;;AAC5CC,MAAAA,G,UAAAA,G;;AACFC,MAAAA,S;;;;;;;OAED;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;AAE9B;AACA;AACA;AACA;;yBAEqBU,Q,WADpBF,OAAO,CAAC,UAAD,C,UAGHC,QAAQ,CAAC;AAAEE,QAAAA,WAAW,EAAEL,GAAG,IAAI,IAAtB;AAA4BM,QAAAA,IAAI,EAAEX;AAAlC,OAAD,C,UAGRQ,QAAQ,CAAC;AAAEE,QAAAA,WAAW,EAAEL,GAAG,IAAI,MAAtB;AAA8BM,QAAAA,IAAI,EAAEX;AAApC,OAAD,C,2BANb,MACqBS,QADrB,SACsCR,SADtC,CACgD;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eASlCW,MATkC,GASjB,IATiB;AAAA,eAYzBC,UAZyB,GAYLV,KAAK,CAACW,KAZD;AAAA,eAezBC,SAfyB,GAeNZ,KAAK,CAACa,IAfA;AAAA;;AAiB5CC,QAAAA,MAAM,GAAG;AACL,eAAKL,MAAL,GAAc,KAAKM,OAAL,CAAaC,YAAb,CAA0BjB,MAA1B,KAAqC,KAAKgB,OAAL,CAAaE,YAAb,CAA0BlB,MAA1B,CAAnD;AACH;;AAEDmB,QAAAA,KAAK,GAAG;AACJ,cAAIC,GAAG,GAAG,KAAKC,IAAL,CAAUJ,YAAV,CAAuBf,MAAvB,CAAV;AACAkB,UAAAA,GAAG,CAACE,KAAJ,GAAY,KAAKX,UAAjB;AACA,eAAKY,cAAL,CAAoB,IAApB;AACH;AAED;AACJ;AACA;;;AACUC,QAAAA,cAAc,GAAG;AAAA;;AAAA;AACnBC,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,gBAAI,CAAC,KAAI,CAAChB,MAAL,CAAYiB,YAAjB,EAA+B;;AAC/B,YAAA,KAAI,CAACJ,cAAL,CAAoB,KAApB;;AACA,kBAAM;AAAA;AAAA,wCAAUK,IAAV,CAAe,KAAI,CAACP,IAApB,EAA0B,CAA1B,EAA6B,MAAM;AACrC,kBAAID,GAAG,GAAG,KAAI,CAACC,IAAL,CAAUJ,YAAV,CAAuBf,MAAvB,CAAV;;AACA,kBAAIkB,GAAG,CAACE,KAAJ,CAAUO,MAAV,CAAiB,KAAI,CAAClB,UAAtB,CAAJ,EAAuC;AACnCS,gBAAAA,GAAG,CAACE,KAAJ,GAAY,KAAI,CAACT,SAAjB;AACH,eAFD,MAEO;AACHO,gBAAAA,GAAG,CAACE,KAAJ,GAAY,KAAI,CAACX,UAAjB;AACH;AACJ,aAPK,CAAN;;AAQA,YAAA,KAAI,CAACY,cAAL,CAAoB,IAApB;AAZmB;AAatB;AAED;AACJ;AACA;AACA;;;AACIA,QAAAA,cAAc,CAACI,YAAD,EAAwB;AAClC,eAAKjB,MAAL,CAAYiB,YAAZ,GAA2BA,YAA3B;AACA,cAAIP,GAAG,GAAG,KAAKJ,OAAL,CAAaC,YAAb,CAA0Bf,MAA1B,CAAV;AACAkB,UAAAA,GAAG,CAACE,KAAJ,GAAYK,YAAY,GAAG1B,KAAK,CAACW,KAAT,GAAiBX,KAAK,CAACa,IAA/C;AACH;;AArD2C,O;;;;;iBAGrB,I;;;;;;;iBAGG,I","sourcesContent":["import { _decorator, Node, Component, Button, Color, Sprite } from \"cc\";\nimport { DEV } from \"cc/env\";\nimport TweenUtil from \"./TweenUtil\";\n\nconst { ccclass, property } = _decorator;\n\n/**\n * 卡片翻转\n * @version 20210320\n */\n@ccclass('CardFlip')\nexport default class CardFlip extends Component {\n\n    @property({ displayName: DEV && '卡片', type: Node })\n    protected card: Node = null;\n\n    @property({ displayName: DEV && '翻转按钮', type: Node })\n    protected flipBtn: Node = null;\n\n    /** 按钮组件 */\n    protected button: Button = null;\n\n    /** 正面颜色 */\n    protected readonly frontColor: Color = Color.WHITE;\n\n    /** 背面颜色 */\n    protected readonly backColor: Color = Color.GRAY;\n\n    onLoad() {\n        this.button = this.flipBtn.getComponent(Button) || this.flipBtn.addComponent(Button);\n    }\n\n    start() {\n        let spf = this.card.getComponent(Sprite);\n        spf.color = this.frontColor;\n        this.setButtonState(true);\n    }\n\n    /**\n     * 翻转按钮点击回调\n     */\n    async onFlipBtnClick() {\n        console.log(\"Aaaaaaaaaa\");\n        if (!this.button.interactable) return;\n        this.setButtonState(false);\n        await TweenUtil.flip(this.card, 2, () => {\n            let spf = this.card.getComponent(Sprite);\n            if (spf.color.equals(this.frontColor)) {\n                spf.color = this.backColor;\n            } else {\n                spf.color = this.frontColor;\n            }\n        });\n        this.setButtonState(true);\n    }\n\n    /**\n     * 设置按钮状态\n     * @param interactable 是否可点击\n     */\n    setButtonState(interactable: boolean) {\n        this.button.interactable = interactable;\n        let spf = this.flipBtn.getComponent(Sprite);\n        spf.color = interactable ? Color.WHITE : Color.GRAY;\n    }\n\n}\n"]}