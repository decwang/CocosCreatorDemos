{"version":3,"sources":["file:///Users/mu/Desktop/Creator3.5.2_2D_CardFlip/assets/cases/cardFlip/scripts/Case_CardFlip.ts"],"names":["_decorator","Component","Node","Color","TweenUtil","ccclass","property","Case_CardFlip","displayName","CC_DEV","type","button","frontColor","WHITE","backColor","GRAY","onLoad","init","registerEvent","start","reset","onDestroy","unregisterEvent","flipBtn","on","cc","EventType","TOUCH_END","onFlipBtnClick","off","getComponent","Button","addComponent","card","color","setButtonState","interactable","flip","equals"],"mappings":"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","sourcesContent":["import { _decorator, utils, Component, Node, Button, Color } from 'cc';\nconst { ccclass, property } = _decorator;\n\nimport TweenUtil from \"../../../eazax-cutils/TweenUtil\";\n// /**\n// * 卡片翻转\n// * @see TweenUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/TweenUtil.ts\n// * @version 20210320\n// */\n\n@ccclass('CaseCardFlip')\nexport default class Case_CardFlip extends Component {\n    @property({ displayName: CC_DEV && '卡片', type: Node })\n    protected card: Node | null = null;\n    @property({ displayName: CC_DEV && '翻转按钮', type: Node })\n    protected flipBtn: Node | null = null;\n// /** 按钮组件 */\n    protected button: Button | null = null;\n// /** 正面颜色 */\n    protected readonly frontColor: Color = Color.WHITE;\n// /** 背面颜色 */\n    protected readonly backColor: Color = Color.GRAY;\n    protected onLoad() {\n        this.init();\n        this.registerEvent();\n    }\n    protected start() {\n        this.reset();\n    }\n    protected onDestroy() {\n        this.unregisterEvent();\n    }\n// /**\n// * 注册事件\n// */\n    protected registerEvent() {\n        this.flipBtn.on(cc.Node.EventType.TOUCH_END, this.onFlipBtnClick, this);\n    }\n// /**\n// * 反注册事件\n// */\n    protected unregisterEvent() {\n        this.flipBtn.off(cc.Node.EventType.TOUCH_END, this.onFlipBtnClick, this);\n    }\n// /**\n// * 初始化\n// */\n    protected init() {\n        this.button = this.flipBtn.getComponent(cc.Button) || this.flipBtn.addComponent(cc.Button);\n    }\n// /**\n// * 重置\n// */\n    protected reset() {\n        this.card.color = this.frontColor;\n        this.setButtonState(true);\n    }\n// /**\n// * 翻转按钮点击回调\n// */\n    protected async onFlipBtnClick() {\n        if (!this.button.interactable) return;\n        this.setButtonState(false);\n        await TweenUtil.flip(this.card, 2, () => {\n        if (this.card.color.equals(this.frontColor)) {\n        this.card.color = this.backColor;\n        } else {\n        this.card.color = this.frontColor;\n        }\n        });\n        this.setButtonState(true);\n    }\n// /**\n// * 设置按钮状态\n// * @param interactable 是否可点击\n// */\n    protected setButtonState(interactable: boolean) {\n        this.button.interactable = interactable;\n        this.flipBtn.color = interactable ? cc.Color.WHITE : cc.Color.GRAY;\n    }\n}\n\n\n/**\n * 注意：已把原脚本注释，由于脚本变动过大，转换的时候可能有遗落，需要自行手动转换\n */\n// import TweenUtil from \"../../../eazax-ccc/utils/TweenUtil\";\n// \n// const { ccclass, property } = cc._decorator;\n// \n// /**\n//  * 卡片翻转\n//  * @see TweenUtil.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/utils/TweenUtil.ts\n//  * @version 20210320\n//  */\n// @ccclass\n// export default class Case_CardFlip extends cc.Component {\n// \n//     @property({ displayName: CC_DEV && '卡片', type: cc.Node })\n//     protected card: cc.Node = null;\n// \n//     @property({ displayName: CC_DEV && '翻转按钮', type: cc.Node })\n//     protected flipBtn: cc.Node = null;\n// \n//     /** 按钮组件 */\n//     protected button: cc.Button = null;\n// \n//     /** 正面颜色 */\n//     protected readonly frontColor: cc.Color = cc.Color.WHITE;\n// \n//     /** 背面颜色 */\n//     protected readonly backColor: cc.Color = cc.Color.GRAY;\n// \n//     protected onLoad() {\n//         this.init();\n//         this.registerEvent();\n//     }\n// \n//     protected start() {\n//         this.reset();\n//     }\n// \n//     protected onDestroy() {\n//         this.unregisterEvent();\n//     }\n// \n//     /**\n//      * 注册事件\n//      */\n//     protected registerEvent() {\n//         this.flipBtn.on(cc.Node.EventType.TOUCH_END, this.onFlipBtnClick, this);\n//     }\n// \n//     /**\n//      * 反注册事件\n//      */\n//     protected unregisterEvent() {\n//         this.flipBtn.off(cc.Node.EventType.TOUCH_END, this.onFlipBtnClick, this);\n//     }\n// \n//     /**\n//      * 初始化\n//      */\n//     protected init() {\n//         this.button = this.flipBtn.getComponent(cc.Button) || this.flipBtn.addComponent(cc.Button);\n//     }\n// \n//     /**\n//      * 重置\n//      */\n//     protected reset() {\n//         this.card.color = this.frontColor;\n//         this.setButtonState(true);\n//     }\n// \n//     /**\n//      * 翻转按钮点击回调\n//      */\n//     protected async onFlipBtnClick() {\n//         if (!this.button.interactable) return;\n//         this.setButtonState(false);\n//         await TweenUtil.flip(this.card, 2, () => {\n//             if (this.card.color.equals(this.frontColor)) {\n//                 this.card.color = this.backColor;\n//             } else {\n//                 this.card.color = this.frontColor;\n//             }\n//         });\n//         this.setButtonState(true);\n//     }\n// \n//     /**\n//      * 设置按钮状态\n//      * @param interactable 是否可点击\n//      */\n//     protected setButtonState(interactable: boolean) {\n//         this.button.interactable = interactable;\n//         this.flipBtn.color = interactable ? cc.Color.WHITE : cc.Color.GRAY;\n//     }\n// \n// }\n"]}