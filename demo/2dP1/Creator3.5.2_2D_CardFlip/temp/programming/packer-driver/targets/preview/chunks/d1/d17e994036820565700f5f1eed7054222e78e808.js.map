{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/2dP1/Creator3.5.2_2D_CardFlip/assets/scripts/ScreenAdapter.ts"],"names":["_decorator","Component","view","Canvas","screen","EventManager","ccclass","executionOrder","help","menu","ScreenAdapter","onLoad","init","onEnable","adapt","setResizeCallback","onResize","emit","winSize","windowSize","screenRatio","width","height","designResolution","cc","instance","designRatio","setFitWidth","setFitHeight","canvas","fitHeight","fitWidth"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAwBC,MAAAA,M,OAAAA,M;;AAGvDC,MAAAA,Y;;;;;;;OAFD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,cAAX;AAA2BC,QAAAA,IAA3B;AAAiCC,QAAAA;AAAjC,O,GAA0CT,U;;yBAW3BU,a;AAPrB;AACA;AACA;AACA;AACA;aAECJ,OAAO,CAAC,eAAD,C,gBAAR,MACqBI,aADrB,SAC2CT,SAD3C,CACqD;AACjD;AACJ;AACA;AACcU,QAAAA,MAAM,GAAG;AACf,eAAKC,IAAL;AACH;AAED;AACJ;AACA;;;AACcC,QAAAA,QAAQ,GAAG;AACjB,eAAKC,KAAL;AACH;AAED;AACJ;AACA;;;AACcF,QAAAA,IAAI,GAAG;AACb;AACAV,UAAAA,IAAI,CAACa,iBAAL,CAAuB,MAAM,KAAKC,QAAL,EAA7B;AACH;AAED;AACJ;AACA;;;AACcA,QAAAA,QAAQ,GAAG;AACjB;AACA;AACA;AAAA;AAAA,4CAAaC,IAAb,CAAkB,aAAlB,EAHiB,CAIjB;;AACA,eAAKH,KAAL;AACH;AAED;AACJ;AACA;;;AACcA,QAAAA,KAAK,GAAG;AACd;AACA,cAAMI,OAAO,GAAGd,MAAM,CAACe,UAAvB;AAAA,cACAC,WAAW,GAAGF,OAAO,CAACG,KAAR,GAAgBH,OAAO,CAACI,MADtC,CAFc,CAId;;AACA,cAAMC,gBAAgB,GAAGC,EAAE,CAACrB,MAAH,CAAUsB,QAAV,CAAmBF,gBAA5C;AAAA,cACAG,WAAW,GAAGH,gBAAgB,CAACF,KAAjB,GAAyBE,gBAAgB,CAACD,MADxD,CALc,CAOd;;AACA,cAAIF,WAAW,IAAI,CAAnB,EAAsB;AAClB;AACA,gBAAIA,WAAW,IAAIM,WAAnB,EAAgC;AAC5B,mBAAKC,WAAL;AACH,aAFD,MAEO;AACH;AACA;AACA,mBAAKC,YAAL;AACH;AACJ,WATD,MASO;AACH;AACA,iBAAKA,YAAL;AACH;AACJ;AAED;AACJ;AACA;;;AACcA,QAAAA,YAAY,GAAG;AACrB,cAAMC,MAAM,GAAG1B,MAAM,CAACsB,QAAtB;AACAI,UAAAA,MAAM,CAACC,SAAP,GAAmB,IAAnB;AACAD,UAAAA,MAAM,CAACE,QAAP,GAAkB,KAAlB;AACH;AAED;AACJ;AACA;;;AACcJ,QAAAA,WAAW,GAAG;AACpB,cAAME,MAAM,GAAG1B,MAAM,CAACsB,QAAtB;AACAI,UAAAA,MAAM,CAACC,SAAP,GAAmB,KAAnB;AACAD,UAAAA,MAAM,CAACE,QAAP,GAAkB,IAAlB;AACH;;AA5EgD,O","sourcesContent":["import { _decorator, Component, view, Canvas, director, game, screen } from 'cc';\r\nconst { ccclass, executionOrder, help, menu } = _decorator;\r\n\r\nimport EventManager from \"./EventManager\";\r\n\r\n/**\r\n* 屏幕适配组件\r\n* @author 陈皮皮 (ifaswind)\r\n* @version 20210504\r\n*/\r\n\r\n@ccclass('ScreenAdapter')\r\nexport default class ScreenAdapter extends Component {\r\n    /**\r\n    * 生命周期：加载\r\n    */\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n    * 生命周期：组件启用\r\n    */\r\n    protected onEnable() {\r\n        this.adapt();\r\n    }\r\n\r\n    /**\r\n    * 初始化\r\n    */\r\n    protected init() {\r\n        // 设置游戏窗口变化的回调（仅 Web 平台有效）\r\n        view.setResizeCallback(() => this.onResize());\r\n    }\r\n\r\n    /**\r\n    * 窗口变化回调\r\n    */\r\n    protected onResize() {\r\n        // 由于 setResizeCallback 只能设置一个回调\r\n        // 使用事件系统发送一个特定事件，让其他组件也可以监听到窗口变化\r\n        EventManager.emit('view-resize');\r\n        // 适配\r\n        this.adapt();\r\n    }\r\n\r\n    /**\r\n    * 适配\r\n    */\r\n    protected adapt() {\r\n        // 实际屏幕比例\r\n        const winSize = screen.windowSize,\r\n        screenRatio = winSize.width / winSize.height;\r\n        // 设计比例\r\n        const designResolution = cc.Canvas.instance.designResolution,\r\n        designRatio = designResolution.width / designResolution.height;\r\n        // 判断实际屏幕宽高比\r\n        if (screenRatio <= 1) {\r\n            // 此时屏幕高度大于宽度\r\n            if (screenRatio <= designRatio) {\r\n                this.setFitWidth();\r\n            } else {\r\n                // 此时实际屏幕比例大于设计比例\r\n                // 为了保证纵向的游戏内容不受影响，应使用 fitHeight 模式\r\n                this.setFitHeight();\r\n            }\r\n        } else {\r\n            // 此时屏幕高度小于宽度\r\n            this.setFitHeight();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 适配高度模式\r\n    */\r\n    protected setFitHeight() {\r\n        const canvas = Canvas.instance;\r\n        canvas.fitHeight = true;\r\n        canvas.fitWidth = false;\r\n    }\r\n    \r\n    /**\r\n    * 适配宽度模式\r\n    */\r\n    protected setFitWidth() {\r\n        const canvas = Canvas.instance;\r\n        canvas.fitHeight = false;\r\n        canvas.fitWidth = true;\r\n    }\r\n}\r\n"]}