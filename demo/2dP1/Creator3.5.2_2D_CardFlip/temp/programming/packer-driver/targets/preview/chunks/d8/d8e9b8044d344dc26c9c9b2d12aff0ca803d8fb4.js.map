{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/2dP1/Creator3.5.2_2D_CardFlip/assets/scripts/TweenUtil.ts"],"names":["TweenUtil","tween","Vec3","flip","node","duration","onMiddle","onComplete","Promise","res","t","time","scale","scaleX","x","skewY","parallel","to","y","z","easing","call","start"],"mappings":";;;8BAOqBA,S;;;;;;;AADMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;;;;;;yBACbF,S,GAAN,MAAMA,SAAN,CAAgB;AAC3B;AACJ;AACA;AACA;AACA;AACA;AACA;AACsB,eAAJG,IAAI,CAACC,IAAD,EAAaC,QAAb,EAA+BC,QAA/B,EAAoDC,UAApD,EAA0F;AACxG,iBAAO,IAAIC,OAAJ,CAAkBC,GAAG,IAAI;AAC5B,gBAAMC,CAAC,GAAGT,KAAV;AAAA,gBACAU,IAAI,GAAGN,QAAQ,GAAG,CADlB;AAAA,gBAEAO,KAAK,GAAGR,IAAI,CAACQ,KAFb;AAAA,gBAGAC,MAAM,GAAGD,KAAK,CAACE,CAHf;AAAA,gBAIAC,KAAK,GAAGF,MAAM,GAAG,CAAT,GAAa,EAAb,GAAkB,CAAC,EAJ3B;AAKAH,YAAAA,CAAC,CAACN,IAAD,CAAD,CACKY,QADL,CAEQN,CAAC,GAAGO,EAAJ,CAAON,IAAP,EAAa;AAAEC,cAAAA,KAAK,EAAE,IAAIV,IAAJ,CAAS,CAAT,EAAYU,KAAK,CAACM,CAAlB,EAAqBN,KAAK,CAACO,CAA3B;AAAT,aAAb,EAAuD;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAAvD,CAFR,EAGQV,CAAC,GAAGO,EAAJ,CAAON,IAAP,EAAa;AAAEI,cAAAA,KAAK,EAAE,CAACA;AAAV,aAAb,EAAgC;AAAEK,cAAAA,MAAM,EAAE;AAAV,aAAhC,CAHR,EAKKC,IALL,CAKU,MAAM;AACRf,cAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACH,aAPL,EAQKU,QARL,CASQN,CAAC,GAAGO,EAAJ,CAAON,IAAP,EAAa;AAAEC,cAAAA,KAAK,EAAE,IAAIV,IAAJ,CAAS,CAACU,KAAK,CAACE,CAAhB,EAAmBF,KAAK,CAACM,CAAzB,EAA4BN,KAAK,CAACO,CAAlC;AAAT,aAAb,EAA8D;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAA9D,CATR,EAUQV,CAAC,GAAGO,EAAJ,CAAON,IAAP,EAAa;AAAEI,cAAAA,KAAK,EAAE;AAAT,aAAb,EAA2B;AAAEK,cAAAA,MAAM,EAAE;AAAV,aAA3B,CAVR,EAYKC,IAZL,CAYU,MAAM;AACRd,cAAAA,UAAU,IAAIA,UAAU,EAAxB;AACAE,cAAAA,GAAG;AACN,aAfL,EAgBKa,KAhBL;AAiBH,WAvBM,CAAP;AAwBH;;AAjC0B,O","sourcesContent":["/**\n* Tween 工具\n* @author 陈皮皮 (ifaswind)\n* @version 20210320\n*/\n\nimport { _decorator, Node, tween, Vec3 } from 'cc';\nexport default class TweenUtil {\n    /**\n    * 水平翻转（卡片翻转）\n    * @param node 节点\n    * @param duration 总时长\n    * @param onMiddle 中间状态回调\n    * @param onComplete 完成回调\n    */\n    public static flip(node: Node, duration: number, onMiddle?: Function, onComplete?: Function): Promise<void> {\n        return new Promise<void>(res => {\n            const t = tween,\n            time = duration / 2,\n            scale = node.scale,\n            scaleX = scale.x,\n            skewY = scaleX > 0 ? 20 : -20;\n            t(node)\n                .parallel(\n                    t().to(time, { scale: new Vec3(0, scale.y, scale.z) }, { easing: 'quadIn' }),\n                    t().to(time, { skewY: -skewY }, { easing: 'quadOut' }),\n                )\n                .call(() => {\n                    onMiddle && onMiddle();\n                })\n                .parallel(\n                    t().to(time, { scale: new Vec3(-scale.x, scale.y, scale.z) }, { easing: 'quadOut' }),\n                    t().to(time, { skewY: 0 }, { easing: 'quadIn' }),\n                )\n                .call(() => {\n                    onComplete && onComplete();\n                    res();\n                })\n                .start();\n        });\n    }\n}\n"]}