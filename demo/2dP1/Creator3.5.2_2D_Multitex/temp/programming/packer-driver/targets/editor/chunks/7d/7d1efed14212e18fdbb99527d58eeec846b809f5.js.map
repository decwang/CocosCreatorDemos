{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/2dP1/Creator3.5.2_2D_Multitex/assets/src/MTTex.ts"],"names":["_decorator","Component","director","Material","MTBatcher2D","ccclass","property","MTTex","getInstance","gInstance","start","console","log","root","hackBatch2d","batcher2D","loadTextureBindings","mtMat","pass","passes","mtTexBindingMap","Map","i","name","binding","getBinding","set","setTexturesBindingMap"],"mappings":";;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,Q,OAAAA,Q;;AACvCC,MAAAA,W,iBAAAA,W;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;uBAGjBO,K,WADZF,OAAO,CAAC,OAAD,C,UAIHC,QAAQ,CAACH,QAAD,C,sCAJb,MACaI,KADb,SAC2BN,SAD3B,CACqC;AAAA;AAAA;;AAAA;AAAA;;AAMf,eAAXO,WAAW,GAAiB;AAC/B,iBAAOD,KAAK,CAACE,SAAb;AACH;;AAEDC,QAAAA,KAAK,GAAI;AACL,cAAIH,KAAK,CAACE,SAAV,EAAqB;AACjBE,YAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACH;;AACD,cAAIV,QAAQ,CAACW,IAAb,EAAmB;AACf;AAAA;AAAA,4CAAaL,WAAb,GAA2BM,WAA3B,CAAuCZ,QAAQ,CAACW,IAAT,CAAcE,SAArD;AACH;;AACD,eAAKC,mBAAL;AACAT,UAAAA,KAAK,CAACE,SAAN,GAAkB,IAAlB;AACH;;AAEDO,QAAAA,mBAAmB,GAAG;AAAA;;AAClB,cAAI,QAAQ,KAAKC,KAAjB,EAAwB;AACpB;AACH;;AACD,gBAAMC,IAAI,kBAAG,KAAKD,KAAR,qBAAG,YAAYE,MAAZ,CAAmB,CAAnB,CAAb;AACA,gBAAMC,eAAe,GAAG,IAAIC,GAAJ,EAAxB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,kBAAMC,IAAI,GAAG,kBAAkBD,CAA/B;AACA,kBAAME,OAAO,GAAGN,IAAI,CAACO,UAAL,CAAgBF,IAAhB,CAAhB;;AACA,gBAAIC,OAAO,IAAI,CAAf,EAAkB;AACdJ,cAAAA,eAAe,CAACM,GAAhB,CAAoBH,IAApB,EAA0BC,OAA1B;AACH;AACJ;;AACD;AAAA;AAAA,0CAAYhB,WAAZ,GAA0BmB,qBAA1B,CAAgDP,eAAhD;AACH;;AAnCgC,O,UAClBX,S,GAA0B,I;;;;;iBAGhB,I","sourcesContent":["\nimport { _decorator, Component, Node, director, Material } from 'cc';\nimport { MTBatcher2D } from './MTBatcher2D';\nconst { ccclass, property } = _decorator;\n \n@ccclass('MTTex')\nexport class MTTex extends Component {\n    private static gInstance: MTTex | null = null;\n\n    @property(Material)\n    mtMat: Material | null = null;\n\n    static getInstance(): MTTex | null {\n        return MTTex.gInstance;\n    }\n\n    start () {\n        if (MTTex.gInstance) {\n            console.log('ERROR! MTTex must just exist only one instance.');\n        }\n        if (director.root) {\n            MTBatcher2D .getInstance().hackBatch2d(director.root.batcher2D);\n        }\n        this.loadTextureBindings();\n        MTTex.gInstance = this;\n    }\n\n    loadTextureBindings() {\n        if (null == this.mtMat) {\n            return;\n        }\n        const pass = this.mtMat?.passes[0];\n        const mtTexBindingMap = new Map<string, number>();\n        for (let i = 1; i < 8; i++) {\n            const name = 'spriteTexture' + i;\n            const binding = pass.getBinding(name);\n            if (binding >= 0) {\n                mtTexBindingMap.set(name, binding);\n            }\n        }\n        MTBatcher2D.getInstance().setTexturesBindingMap(mtTexBindingMap);\n    }\n\n}\n"]}