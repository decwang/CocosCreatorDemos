{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/3d/Creator3.5.1_3D_Graffiti/assets/scripts/DecalMeshRenderer.ts"],"names":["DecalVertex","DecalMeshRenderer","Mat4","MeshRenderer","Vec3","gfx","Vec2","utils","constructor","args","modelPos","viewPos","normal","uv","length","set","applyMV","worldMat","viewMat","transformMat4","applyMVInv","worldInvMat","viewInvMat","clone","dv","matWorld","matView","matProj","matWorldInv","matViewInv","scale","decalVertexes","meshPositions","meshNormals","meshUVs","genDecalMesh","target","me","eyePosition","center","worldMatrix","invert","lookAt","UNIT_X","i","renderingSubMeshes","pos","geometricInfo","positions","idxs","indices","normals","readAttribute","AttributeName","ATTR_NORMAL","idx","vPos","push","clipGeometrylByPlane","x","y","z","console","log","decalVertex","add","multiplyScalar","geo","primitiveMode","PrimitiveMode","TRIANGLE_STRIP","uvs","attributes","Attribute","ATTR_POSITION","Format","RGB32F","ATTR_TEX_COORD","RG32F","mesh","createMesh","undefined","calculateBounds","clipLineByPlane","p0","p1","planeN","planeD","linePoints","l0","subtract","l0d","dot","p0d","t","clipTriangelByPlane","p2","d0","d1","d2","outsideCount","rstPoints","tempPoints","line0Points","line1Points","inDecalVer","inVertices","outVertices","p0Vert","p1Vert","p2Vert","verts"],"mappings":"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","sourcesContent":["import { Mat4, MeshRenderer, Vec3, Node, Mesh, gfx, Vec2, utils, primitives, Vec4, Material } from \"cc\";\n\nclass DecalVertex {\n    modelPos: Vec3;\n    viewPos: Vec3;\n    normal: Vec3;\n    uv: Vec2;\n\n    constructor(...args: any[]) {\n        this.modelPos = new Vec3();\n        this.viewPos = new Vec3();\n        this.normal = new Vec3();\n        this.uv = new Vec2();\n        if (args.length >= 3) {\n            this.uv.set(args[2]);\n        }\n        if (args.length >= 2) {\n            this.normal.set(args[1]);\n        }\n        if (args.length >= 1) {\n            this.viewPos.set(args[0]);\n            this.modelPos.set(this.viewPos);\n        }\n    }\n\n    applyMV(worldMat: Mat4, viewMat: Mat4) {\n        Vec3.transformMat4(this.viewPos, this.modelPos, worldMat);\n        this.viewPos.transformMat4(viewMat);\n    }\n\n    applyMVInv(worldInvMat: Mat4, viewInvMat: Mat4) {\n        Vec3.transformMat4(this.modelPos, this.viewPos, viewInvMat);\n        this.modelPos.transformMat4(worldInvMat);\n    }\n\n    clone(): DecalVertex {\n        const dv = new DecalVertex();\n\n        dv.viewPos = this.viewPos.clone();\n        dv.normal = this.normal.clone();\n        dv.uv = this.uv.clone();\n\n        return dv;\n    }\n}\n\nexport class DecalMeshRenderer extends MeshRenderer {\n\n    private matWorld: Mat4 | null = null;\n    private matView: Mat4 = new Mat4();\n    private matProj: Mat4 = new Mat4();\n    private matWorldInv: Mat4 = new Mat4();\n    private matViewInv: Mat4 = new Mat4();\n    private scale: Vec3 = new Vec3();\n\n    private decalVertexes: DecalVertex[] = [];\n    private meshPositions: number[] = [];\n    private meshNormals: number[] = [];\n    private meshUVs: number[] = [];\n\n    genDecalMesh(target: Node, me: Mesh, eyePosition: Vec3, center: Vec3, normal: Vec3, scale: Vec3) {\n        this.matWorld = target.worldMatrix;\n        Mat4.invert(this.matWorldInv, this.matWorld);\n        this.scale.set(scale);\n        Mat4.lookAt(this.matView, eyePosition, center, Vec3.UNIT_X);\n        Mat4.invert(this.matViewInv, this.matView);\n\n        if (null == this.matWorld) { return; }\n\n        // vertex info\n        for (let i = 0; i < me.renderingSubMeshes.length; i++) {\n            const pos = me.renderingSubMeshes[i].geometricInfo.positions;\n            const idxs = me.renderingSubMeshes[i].geometricInfo.indices;\n            const normals = me.readAttribute(i, gfx.AttributeName.ATTR_NORMAL);\n            if (pos.length != normals?.length) { break; }\n\n            if (idxs) {\n                for (let idx = 0; idx < idxs.length; idx++) {\n                    const vPos = idxs[idx] * 3;\n                    let dv = new DecalVertex();\n                    dv.modelPos.set(pos[vPos], pos[vPos + 1], pos[vPos + 2]);\n                    dv.normal.set(normals[vPos], normals[vPos + 1], normals[vPos + 2]);\n\n                    dv.applyMV(this.matWorld, this.matView);\n                    this.decalVertexes.push(dv);\n                }\n            } else {\n                for (let vPos = 0; vPos < pos.length; vPos+=3) {\n                    let dv = new DecalVertex();\n                    dv.modelPos.set(pos[vPos], pos[vPos + 1], pos[vPos + 2]);\n                    dv.normal.set(normals[vPos], normals[vPos + 1], normals[vPos + 2]);\n\n                    dv.applyMV(this.matWorld, this.matView);\n                    this.decalVertexes.push(dv);\n                }\n            }\n        }\n\n        this.decalVertexes = this.clipGeometrylByPlane(this.decalVertexes, new Vec3( 1, 0, 0 ), this.scale.x/2);\n        this.decalVertexes = this.clipGeometrylByPlane(this.decalVertexes, new Vec3(-1, 0, 0 ), this.scale.x/2);\n        this.decalVertexes = this.clipGeometrylByPlane(this.decalVertexes, new Vec3( 0, 1, 0 ), this.scale.y/2);\n        this.decalVertexes = this.clipGeometrylByPlane(this.decalVertexes, new Vec3( 0,-1, 0 ), this.scale.y/2);\n        this.decalVertexes = this.clipGeometrylByPlane(this.decalVertexes, new Vec3( 0, 0, 1 ), this.scale.z/2);\n        this.decalVertexes = this.clipGeometrylByPlane(this.decalVertexes, new Vec3( 0, 0,-1 ), this.scale.z/2);\n\n        if (0 == this.decalVertexes.length) {\n            console.log(\"decal vertexes length is 0\");\n            return;\n        }\n\n        for ( let i = 0; i < this.decalVertexes.length; i ++ ) {\n\n            const decalVertex = this.decalVertexes[ i ];\n\n            decalVertex.uv = new Vec2(\n                0.5 + ( decalVertex.viewPos.x / this.scale.x ),\n                0.5 + ( decalVertex.viewPos.y / this.scale.y )\n            );\n            const modelPos = decalVertex.modelPos;\n            modelPos.add(Vec3.multiplyScalar(new Vec3(), decalVertex.normal, 0.01));\n\n            this.meshPositions.push( decalVertex.modelPos.x, decalVertex.modelPos.y, decalVertex.modelPos.z );\n            this.meshNormals.push( decalVertex.normal.x, decalVertex.normal.y, decalVertex.normal.z );\n            this.meshUVs.push( decalVertex.uv.x, decalVertex.uv.y );\n        }\n\n        const geo = {\n            primitiveMode: gfx.PrimitiveMode.TRIANGLE_STRIP,\n            positions: this.meshPositions,\n            normals: this.meshNormals,\n            uvs: this.meshUVs,\n            attributes: [\n                new gfx.Attribute(gfx.AttributeName.ATTR_POSITION, gfx.Format.RGB32F),\n                new gfx.Attribute(gfx.AttributeName.ATTR_NORMAL, gfx.Format.RGB32F),\n                new gfx.Attribute(gfx.AttributeName.ATTR_TEX_COORD, gfx.Format.RG32F),\n            ],\n        };\n\n        this.mesh = utils.createMesh(geo, undefined, { calculateBounds: false });\n    }\n\n    clipLineByPlane(p0: Vec3, p1: Vec3, planeN: Vec3, planeD: number): Vec3[] {\n        const linePoints: Vec3[] = []\n\n        const l0 = Vec3.subtract(new Vec3(), p1, p0);\n        let l0d = Vec3.dot(planeN, l0);\n        let p0d = Vec3.dot(planeN, p0);\n        if (p0d < planeD && p0d + l0d < planeD) {\n            // the line is fully inside of plane\n            linePoints.push(p0.clone(), p1.clone());\n            return linePoints;\n        }\n        if (p0d > planeD && p0d + l0d > planeD) {\n            // the line is fully outside of plane\n            return linePoints;\n        }\n\n        const t = (planeD - p0d)/l0d;\n        if (t > 0) {\n            // p0 inside of plane\n            linePoints.push(p0.clone());\n            linePoints.push(Vec3.add(new Vec3(), p0, l0.multiplyScalar(t)));\n        } else {\n            // p0 is outside of plane\n            linePoints.push(Vec3.add(new Vec3(), p0, l0.multiplyScalar(t)));\n            linePoints.push(p0.clone());\n        }\n\n        return linePoints;\n    }\n\n    clipTriangelByPlane(p0: Vec3, p1: Vec3, p2: Vec3, planeN: Vec3, planeD: number): Vec3[] {\n        const d0 = Vec3.dot(p0, planeN) - planeD;\n        const d1 = Vec3.dot(p1, planeN) - planeD;\n        const d2 = Vec3.dot(p2, planeN) - planeD;\n\n        let outsideCount = 0;\n        outsideCount += ((d0 >= 0) ? 1 : 0);\n        outsideCount += ((d1 >= 0) ? 1 : 0);\n        outsideCount += ((d2 >= 0) ? 1 : 0);\n\n        const rstPoints: Vec3[] = [];\n        if (3 == outsideCount) {\n            return rstPoints;\n        } else if (0 == outsideCount) {\n            rstPoints.push(p0.clone());\n            rstPoints.push(p1.clone());\n            rstPoints.push(p2.clone());\n            return rstPoints;\n        } else if (1 == outsideCount) {\n            const tempPoints = [];\n            // make sure outside point location at last location\n            if (d0 > 0) {\n                tempPoints.push(p1, p2, p0);\n            } else if (d1 > 0) {\n                tempPoints.push(p2, p0, p1);\n            } else {\n                tempPoints.push(p0, p1, p2);\n            }\n\n            let linePoints = this.clipLineByPlane(tempPoints[1], tempPoints[2], planeN, planeD);\n            if (2 == linePoints.length) {\n                rstPoints.push(tempPoints[0].clone());\n                rstPoints.push(tempPoints[1].clone());\n                rstPoints.push(linePoints[1]);\n            }\n\n            linePoints = this.clipLineByPlane(tempPoints[0], tempPoints[2], planeN, planeD);\n            if (2 == linePoints.length) {\n                rstPoints.push(rstPoints[2].clone());\n                rstPoints.push(linePoints[1]);\n                rstPoints.push(tempPoints[0].clone());\n            }\n        } else if (2 == outsideCount) {\n            const tempPoints = [];\n            // make sure outside point location at last location\n            if (d0 < 0) {\n                tempPoints.push(p0, p1, p2);\n            } else if (d1 < 0) {\n                tempPoints.push(p1, p2, p0);\n            } else {\n                tempPoints.push(p2, p0, p1);\n            }\n\n            let line0Points = this.clipLineByPlane(tempPoints[0], tempPoints[1], planeN, planeD);\n            let line1Points = this.clipLineByPlane(tempPoints[0], tempPoints[2], planeN, planeD);\n            if (2 == line0Points.length && 2 == line1Points.length) {\n                rstPoints.push(tempPoints[0]);\n                rstPoints.push(line0Points[1]);\n                rstPoints.push(line1Points[1]);\n            }\n        } else {\n            console.log('ERROR! impossible reach here');\n        }\n\n        return rstPoints;\n    }\n\n    clipGeometrylByPlane(inDecalVer: DecalVertex[], planeN: Vec3, planeD: number): DecalVertex[] {\n        const inVertices = inDecalVer;\n        const outVertices : DecalVertex[] = [];\n\n        for (let i = 0; i < inVertices.length; i += 3) {\n            const p0Vert = inVertices[i];\n            const p1Vert = inVertices[i + 1];\n            const p2Vert = inVertices[i + 2];\n\n            const verts = this.clipTriangelByPlane(\n                p0Vert.viewPos, p1Vert.viewPos, p2Vert.viewPos, planeN, planeD);\n\n            if (3 == verts.length || 6 == verts.length) {\n                let dv = new DecalVertex(verts[0], p0Vert.normal, p0Vert.uv);\n                dv.applyMVInv(this.matWorldInv, this.matViewInv);\n                outVertices.push(dv);\n                dv = new DecalVertex(verts[1], p1Vert.normal, p1Vert.uv);\n                dv.applyMVInv(this.matWorldInv, this.matViewInv);\n                outVertices.push(dv);\n                dv = new DecalVertex(verts[2], p2Vert.normal, p2Vert.uv);\n                dv.applyMVInv(this.matWorldInv, this.matViewInv);\n                outVertices.push(dv);\n            }\n            if (6 == verts.length) {\n                let dv = new DecalVertex(verts[3], p0Vert.normal, p0Vert.uv);\n                dv.applyMVInv(this.matWorldInv, this.matViewInv);\n                outVertices.push(dv);\n                dv = new DecalVertex(verts[4], p1Vert.normal, p1Vert.uv);\n                dv.applyMVInv(this.matWorldInv, this.matViewInv);\n                outVertices.push(dv);\n                dv = new DecalVertex(verts[5], p2Vert.normal, p2Vert.uv);\n                dv.applyMVInv(this.matWorldInv, this.matViewInv);\n                outVertices.push(dv);\n            }\n        }\n\n        return outVertices;\n    }\n}\n"]}