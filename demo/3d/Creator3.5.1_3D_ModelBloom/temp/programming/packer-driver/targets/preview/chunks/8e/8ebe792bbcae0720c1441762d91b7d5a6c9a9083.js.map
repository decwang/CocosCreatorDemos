{"version":3,"sources":["file:///Users/mu/Desktop/Creator3.5.1_3D_ModelBloom/assets/scripts/PPMgr.ts"],"names":["ShaderTexParams","_decorator","Component","Director","ForwardFlow","ForwardStage","gfx","Material","CCString","view","ccclass","property","name","PPStageDesc","_samplerInfo","Filter","LINEAR","NONE","Address","CLAMP","PPMgr","createPPStageMap","Map","fbMap","_quadIA","pipeline","pl","instance","root","device","samper","dev","getSampler","_samplerHash","flows","init","generateIA","replaceScreenFrameBuffer","stageDescs","forEach","stageDesc","create","stage","addStage","registerCreateStage","cb","createPPStageCounter","set","createFrameBufferIf","fbName","fb","get","newfb","generateFrameBuffer","getFrameBuffer","self","screenTexName","flow","ff","stages","fstage","originRender","render","camera","originfb","window","framebuffer","_framebuffer","call","initWithStageDesc","ia","activate","push","vbStride","Float32Array","BYTES_PER_ELEMENT","vbSize","quadVB","createBuffer","BufferInfo","BufferUsageBit","VERTEX","TRANSFER_DST","MemoryUsageBit","HOST","DEVICE","vbData","n","update","ibStride","Uint8Array","ibSize","quadIB","INDEX","indices","attributes","Array","Attribute","Format","RG32F","quadIA","createInputAssembler","InputAssemblerInfo","width","getViewportRect","height","colorAttachment0","ColorAttachment","format","RGBA16F","loadOp","LoadOp","CLEAR","storeOp","StoreOp","STORE","depthStencilAttachment","DepthStencilAttachment","UNKNOWN","depthLoadOp","depthStoreOp","stencilLoadOp","stencilStoreOp","rPass","createRenderPass","RenderPassInfo","clrTexs","createTexture","TextureInfo","TextureType","TEX2D","TextureUsageBit","COLOR_ATTACHMENT","SAMPLED","depthTex","DEPTH_STENCIL_ATTACHMENT","createFramebuffer","FramebufferInfo","destroyQuadInputAssembler","vbs","vertexBuffers","vb","destroy","indexBuffer"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Director, ForwardFlow, ForwardStage, pipeline, ForwardPipeline, renderer, RenderPipeline, gfx, Material, CCString, RenderStage, view } from 'cc';\nimport { PPBaseStage } from './PPBaseStage';\nconst { ccclass, property } = _decorator;\n\nexport class ShaderTexParams {\n    name: string = \"\";\n\n}\n\n@ccclass('PPStageDesc')\nexport class PPStageDesc {\n    @property(Material)\n    mat:    Material | null = null;\n\n    @property(CCString)\n    stageName: string = \"\";\n}\n\ntype createPPStage = (stageDesc: PPStageDesc) => PPBaseStage | null;\n\nconst _samplerInfo = [\n    gfx.Filter.LINEAR,\n    gfx.Filter.LINEAR,\n    gfx.Filter.NONE,\n    gfx.Address.CLAMP,\n    gfx.Address.CLAMP,\n    gfx.Address.CLAMP,\n];\n\n@ccclass('PPMgr')\nexport class PPMgr extends Component {\n\n    @property([PPStageDesc])\n    stageDescs: PPStageDesc[] = [];\n\n    private static createPPStageCounter = 0;\n    private createPPStageMap: Map<number, createPPStage> = new Map();\n    private fbMap: Map<string, gfx.Framebuffer> = new Map();\n    private _quadIA: gfx.InputAssembler | null = null;\n\n    get pipeline() {\n        const pl = Director.instance.root?.pipeline;\n        if (!pl) { return null; }\n        return pl;\n    }\n\n    get device() {\n        const pl = this.pipeline;\n        if (!pl) { return null; }\n\n        return pl?.device;\n    }\n\n    get samper() {\n        const dev = this.device;\n        if (!dev) { return null; }\n\n        // @ts-ignore\n        return this.device.getSampler(_samplerHash);\n    }\n\n    get flows() {\n        const flows = this.pipeline?.flows;\n        if (!flows) {\n            return null;\n        }\n\n        return flows;\n    }\n\n    public init() {\n        const pl = this.pipeline;\n        if (!pl) { return; }\n\n        this.generateIA(pl.device);\n        this.replaceScreenFrameBuffer();\n        this.stageDescs.forEach(stageDesc => {\n            this.createPPStageMap.forEach(create => {\n                const stage = create(stageDesc);\n                if (!stage) { return; }\n                this.addStage(stage);\n            });\n        });\n    }\n\n    public registerCreateStage(cb: createPPStage) {\n        PPMgr.createPPStageCounter++;\n        this.createPPStageMap.set(PPMgr.createPPStageCounter, cb);\n\n        return PPMgr.createPPStageCounter;\n    }\n\n    public createFrameBufferIf(fbName: string): gfx.Framebuffer|null {\n        let fb = this.fbMap.get(fbName);\n        if (fb) { return fb; }\n        const pl = this.pipeline;\n        if (!pl) { return null; }\n        const newfb = this.generateFrameBuffer(pl);\n        if (newfb) {\n            this.fbMap.set(fbName, newfb);\n        }\n\n        return newfb;\n    }\n\n    public getFrameBuffer(name: string): gfx.Framebuffer | null {\n        const fb = this.fbMap.get(name);\n        if (!fb) { return null; }\n        return fb;\n    }\n\n    public replaceScreenFrameBuffer() {\n        const flows = this.flows;\n        if (!flows) { return; }\n        const self = this;\n        const screenTexName = \"screenTex\";\n        const fb = this.createFrameBufferIf(screenTexName);\n        if (!fb) { return; }\n        for (let flow of flows) {\n            if (flow instanceof ForwardFlow) {\n                const ff = flow as ForwardFlow;\n\n                for (let stage of ff.stages) {\n                    if (stage instanceof ForwardStage) {\n                        const fstage = stage;\n                        const originRender = fstage.render;\n\n                        fstage.render = function(camera: renderer.scene.Camera) {\n                            const originfb = camera.window?.framebuffer;\n                            if (camera.window) {\n                                // @ts-ignore\n                                camera.window._framebuffer = self.fbMap.get(screenTexName);\n                            }\n                            originRender.call(fstage, camera);\n                            // @ts-ignore\n                            camera.window._framebuffer = originfb;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n\n    public addStage(stage: PPBaseStage) {\n        const pl = this.pipeline;\n        if (!pl) { return; }\n        const flows = this.flows;\n        if (!flows) { return; }\n\n        for (let flow of flows) {\n            if (flow instanceof ForwardFlow) {\n                stage.initWithStageDesc(this, pl);\n                stage.ia = this._quadIA;\n                stage.activate(pl, flow);\n                flow.stages.push(stage);\n                break;\n            }\n        }\n    }\n\n    private generateIA(device: gfx.Device) {\n        if (null != this._quadIA) { return; }\n\n        const vbStride = Float32Array.BYTES_PER_ELEMENT * 4;\n        const vbSize = vbStride * 4;\n        const quadVB = device.createBuffer(new gfx.BufferInfo(\n            gfx.BufferUsageBit.VERTEX | gfx.BufferUsageBit.TRANSFER_DST,\n            gfx.MemoryUsageBit.HOST | gfx.MemoryUsageBit.DEVICE,\n            vbSize,\n            vbStride,\n        ));\n        const vbData = new Float32Array(4 * 4);\n        let n = 0;\n        vbData[n++] = -1.0; vbData[n++] = -1.0; vbData[n++] = 0; vbData[n++] = 0;\n        vbData[n++] = 1.0; vbData[n++] = -1.0; vbData[n++] = 1; vbData[n++] = 0;\n        vbData[n++] = -1.0; vbData[n++] = 1.0; vbData[n++] = 0; vbData[n++] = 1;\n        vbData[n++] = 1.0; vbData[n++] = 1.0; vbData[n++] = 1; vbData[n++] = 1;\n        quadVB.update(vbData);\n\n        const ibStride = Uint8Array.BYTES_PER_ELEMENT;\n        const ibSize = ibStride * 6;\n        const quadIB = device.createBuffer(new gfx.BufferInfo(\n            gfx.BufferUsageBit.INDEX | gfx.BufferUsageBit.TRANSFER_DST,\n            gfx.MemoryUsageBit.HOST | gfx.MemoryUsageBit.DEVICE,\n            ibSize,\n            ibStride,\n        ));\n        const indices = new Uint8Array(6);\n        indices[0] = 0; indices[1] = 1; indices[2] = 2;\n        indices[3] = 1; indices[4] = 3; indices[5] = 2;\n        quadIB.update(indices);\n\n        const attributes = new Array<gfx.Attribute>(2);\n        attributes[0] = new gfx.Attribute('a_position', gfx.Format.RG32F);\n        attributes[1] = new gfx.Attribute('a_texCoord', gfx.Format.RG32F);\n\n        const quadIA = device.createInputAssembler(new gfx.InputAssemblerInfo(\n            attributes,\n            [quadVB],\n            quadIB,\n        ));\n\n        this._quadIA = quadIA;\n    }\n\n    private generateFrameBuffer (pl: RenderPipeline): gfx.Framebuffer | null {\n        const device = pl.device;\n        if (null == device) {\n            return null;\n        }\n        const width = view.getViewportRect().width;\n        const height = view.getViewportRect().height;\n\n        const colorAttachment0 = new gfx.ColorAttachment();\n        colorAttachment0.format = gfx.Format.RGBA16F;\n        colorAttachment0.loadOp = gfx.LoadOp.CLEAR;\n        colorAttachment0.storeOp = gfx.StoreOp.STORE;\n        const depthStencilAttachment = new gfx.DepthStencilAttachment();\n        depthStencilAttachment.format = gfx.Format.UNKNOWN;\n        depthStencilAttachment.depthLoadOp = gfx.LoadOp.CLEAR;\n        depthStencilAttachment.depthStoreOp = gfx.StoreOp.STORE;\n        depthStencilAttachment.stencilLoadOp = gfx.LoadOp.CLEAR;\n        depthStencilAttachment.stencilStoreOp = gfx.StoreOp.STORE;\n        const rPass = device.createRenderPass(new gfx.RenderPassInfo([colorAttachment0], depthStencilAttachment));\n\n        const clrTexs : gfx.Texture[] = [];\n        clrTexs.push(device.createTexture(new gfx.TextureInfo(\n            gfx.TextureType.TEX2D,\n            gfx.TextureUsageBit.COLOR_ATTACHMENT | gfx.TextureUsageBit.SAMPLED,\n            gfx.Format.RGBA16F,\n            width,\n            height,\n        )));\n\n        const depthTex: gfx.Texture = device.createTexture(new gfx.TextureInfo(\n            gfx.TextureType.TEX2D,\n            gfx.TextureUsageBit.DEPTH_STENCIL_ATTACHMENT,\n            gfx.Format.UNKNOWN,\n            width,\n            height,\n        ));\n\n        const fb: gfx.Framebuffer = device.createFramebuffer(new gfx.FramebufferInfo(\n            rPass,\n            clrTexs,\n            depthTex,\n        ));\n\n        return fb;\n    }\n\n    protected destroyQuadInputAssembler () {\n        if (this._quadIA) {\n            let vbs = this._quadIA?.vertexBuffers;\n            vbs.forEach(vb => {\n                vb.destroy();\n            });\n            this._quadIA.indexBuffer?.destroy();\n            this._quadIA.destroy();\n            this._quadIA = null;\n        }\n\n    }\n\n}\n\n"]}