{"version":3,"sources":["file:///Users/mu/Desktop/Creator3.5.1_3D_ModelBloom/assets/scripts/stage/PPBlurXStage.ts"],"names":["_decorator","Vec2","PPBaseStage","ccclass","PPBlurXStage","constructor","_name","initWithStageDesc","mgr","pl","outputTexName","tex","getFrameBuffer","texSize","colorTextures","x","width","y","height","bindShaderParamsTexture","setOutputFramebuffer","bindShaderParamsVec2"],"mappings":";;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAA4BC,MAAAA,I,OAAAA,I;;AAC5BC,MAAAA,W,iBAAAA,W;;;;;;;OAEH;AAAEC,QAAAA;AAAF,O,GAAcH,U;;8BAGPI,Y,WADZD,OAAO,CAAC,cAAD,C,gBAAR,MACaC,YADb;AAAA;AAAA,sCAC8C;AAE1CC,QAAAA,WAAW,GAAG;AACV;AACA,eAAKC,KAAL,GAAa,cAAb;AACH;;AAEMC,QAAAA,iBAAiB,CAACC,GAAD,EAAaC,EAAb,EAAiC;AACrD,eAAKC,aAAL,GAAqB,UAArB;AAEA,cAAMC,GAAG,GAAGH,GAAG,CAACI,cAAJ,CAAmB,WAAnB,CAAZ;AACA,cAAMC,OAAO,GAAG,IAAIZ,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAhB;;AACA,cAAIU,GAAG,IAAIA,GAAG,CAACG,aAAJ,CAAkB,CAAlB,CAAX,EAAiC;AAC7BD,YAAAA,OAAO,CAACE,CAAR,GAAYJ,GAAG,CAACG,aAAJ,CAAkB,CAAlB,EAAqBE,KAAjC;AACAH,YAAAA,OAAO,CAACI,CAAR,GAAYN,GAAG,CAACG,aAAJ,CAAkB,CAAlB,EAAqBI,MAAjC;AACH;;AACD,eAAKC,uBAAL,CAA6BX,GAA7B,EAAkC,SAAlC,EAA6C,SAA7C;AACA,eAAKY,oBAAL,CAA0BZ,GAA1B;AACA,eAAKa,oBAAL,CAA0B,SAA1B,EAAqCR,OAArC;AACA,eAAKQ,oBAAL,CAA0B,WAA1B,EAAuC,IAAIpB,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAvC;AACH;;AApByC,O","sourcesContent":["\r\nimport { _decorator, RenderPipeline, Vec2 } from 'cc';\r\nimport { PPBaseStage } from '../PPBaseStage';\r\nimport { PPMgr } from '../PPMgr';\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass('PPBlurXStage')\r\nexport class PPBlurXStage extends PPBaseStage {\r\n\r\n    constructor() {\r\n        super();\r\n        this._name = \"PPBlurXStage\";\r\n    }\r\n\r\n    public initWithStageDesc(mgr: PPMgr, pl: RenderPipeline) {\r\n        this.outputTexName = 'tempTex2';\r\n\r\n        const tex = mgr.getFrameBuffer('screenTex');\r\n        const texSize = new Vec2(1, 1);\r\n        if (tex && tex.colorTextures[0]) {\r\n            texSize.x = tex.colorTextures[0].width;\r\n            texSize.y = tex.colorTextures[0].height;\r\n        }\r\n        this.bindShaderParamsTexture(mgr, 'tempTex', 'tempTex');\r\n        this.setOutputFramebuffer(mgr);\r\n        this.bindShaderParamsVec2('texSize', texSize);\r\n        this.bindShaderParamsVec2('direction', new Vec2(1, 0));\r\n    }\r\n\r\n}\r\n"]}