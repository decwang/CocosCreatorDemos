{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/3d/Creator3.5.2_3D_LightningWhip/assets/Lightning.ts"],"names":["_decorator","Component","Node","LineComponent","Vec3","ccclass","property","up","Lightning","line","points","onLoad","getComponent","start","update","deltaTime","startPos","ZERO","endPos","startNode","position","add","multiplyScalar","yOffset","targetNode","equals","length","collectLinPos","displacement","push","positions","destPos","displace","detail","midX","x","midY","y","midZ","z","Math","random","midPos"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, LineComponent, Material, EffectAsset, Vec3, ModelComponent, Texture2D, CCFloat } from \"cc\";\nconst { ccclass, property } = _decorator;\n\nconst up:Vec3 = new Vec3(0, 1, 0);\n\n@ccclass(\"Lightning\")\nexport class Lightning extends Component {\n\n    @property()\n    detail:number = 1;\n    @property()\n    displacement:number = 15;\n    @property()\n    yOffset:number = 0;\n\n    @property(Node)\n    startNode:Node = null;\n    @property(Node)\n    targetNode:Node = null;\n\n    line:LineComponent = null;\n    points:Vec3[];\n\n\n    onLoad () {\n        this.line = this.getComponent(LineComponent);\n        this.points = [];\n    }\n\n    start () {\n    }\n\n    update (deltaTime: number) {\n        let startPos:Vec3 = Vec3.ZERO;\n        let endPos:Vec3 = Vec3.ZERO;\n\n        if (this.startNode) {\n            startPos = this.startNode.position.add(up.multiplyScalar(this.yOffset));\n        }\n        if (this.targetNode) {\n            endPos = this.targetNode.position.add(up.multiplyScalar(this.yOffset));\n        }\n        if(!startPos.equals(endPos)) {\n            this.points.length = 0;\n            this.collectLinPos(startPos, endPos, this.displacement);\n            this.points.push(endPos);\n\n            // @ts-ignore\n            this.line.positions = this.points;\n        }\n    }\n\n\n    //收集顶点，中点分形法插值抖动\n    collectLinPos(startPos:Vec3, destPos:Vec3, displace:number) {\n        if (displace < this.detail) {\n            this.points.push(startPos);\n        }\n        else {\n            let midX:number = (startPos.x + destPos.x) / 2;\n            let midY:number = (startPos.y + destPos.y) / 2;\n            let midZ:number = (startPos.z + destPos.z) / 2;\n\n            midX += (Math.random() - 0.5) * displace;\n            midY += (Math.random() - 0.5) * displace;\n            midZ += (Math.random() - 0.5) * displace;\n\n            let midPos:Vec3 = new Vec3(midX,midY,midZ);\n\n            this.collectLinPos(startPos, midPos, displace / 2);\n            this.collectLinPos(midPos, destPos, displace / 2);\n        }\n    }\n}"]}