{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/3d/Creator3.5.2_3D_ModelRimLight/assets/src/UIMgr.ts"],"names":["UIMgr","_decorator","Node","loader","instantiate","find","Widget","UITransform","view","ResolutionPolicy","ccclass","property","UILayer","inst","_inst","resize","dr","getDesignResolutionSize","s","getFrameSize","rw","width","rh","height","finalW","finalH","setDesignResolutionSize","UNKNOWN","cvs","getComponent","setContentSize","setup","maxLayers","canvas","node","children","length","i","layerNode","layer","uiTransfrom","addComponent","widget","isAlignBottom","isAlignTop","isAlignLeft","isAlignRight","left","right","top","bottom","addChild","getLayerNode","layerIndex","showUI","uiCls","cb","target","ui","resArr","getRes","push","prefabUrl","loadResArray","prefab"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, loader, instantiate, find, Widget, UITransform, view, ResolutionPolicy } from 'cc';\nimport { UIController } from './UIController';\nconst { ccclass, property } = _decorator;\n\n\nexport enum UILayer{\n    SCENE,\n    GAME,\n    HUD,\n    POPUP,\n    ALERT,\n    NOTICE,\n    MASK,\n    NUM\n}\n\nexport class UIMgr {\n    private static _inst: UIMgr = null;\n    public static get inst(): UIMgr {\n        if (!this._inst) {\n            this._inst = new UIMgr();\n        }\n        return this._inst;\n    }\n\n    public resize() {\n        //根据屏幕大小决定适配策略\n        //想明白原理，请阅读本文 https://blog.csdn.net/qq_36720848/article/details/89742451\n\n        //decide the resolution policy according to the relationship between screen size and design resolution.  go https://blog.csdn.net/qq_36720848/article/details/89742451 (artile in Chinese) for more detail.\n        let dr = view.getDesignResolutionSize();\n        var s = view.getFrameSize();\n        var rw = s.width;\n        var rh = s.height;\n        var finalW = rw;\n        var finalH = rh;\n\n        //\n        if((rw/rh) > (dr.width / dr.height)){\n            //如果更长，则用定高\n            //if screen size is longer than design resolution. use fitHeight\n            finalH = dr.height;\n            finalW = finalH * rw/rh;\n        }\n        else{\n            //如果更短，则用定宽\n            //if screen size is shorter than design resolution. use fitWidth.\n            finalW = dr.width;\n            finalH = rh/rw * finalW;\n        }\n\n        //手工修改canvas和设计分辨率，这样反复调用也能生效。\n        //we use the code below instead of fitWidth = true or fitHeight = true. so that we can recall this method many times.\n        view.setDesignResolutionSize(finalW,finalH,ResolutionPolicy.UNKNOWN);\n        let cvs = find('Canvas').getComponent(UITransform);\n        cvs.setContentSize(finalW, finalH);\n    }\n\n    public setup(maxLayers:number){\n        this.resize();\n        let canvas = find('Canvas').getComponent(UITransform);\n        if(canvas.node.children.length){\n            return;\n        }\n        \n        for(let i = 0; i < maxLayers; ++i){\n            let layerNode = new Node();\n            layerNode.layer = canvas.node.layer;\n            let uiTransfrom = layerNode.addComponent(UITransform);\n            uiTransfrom.width = canvas.width;\n            uiTransfrom.height = canvas.height;\n            \n            let widget = layerNode.addComponent(Widget);\n            widget.isAlignBottom = true;\n            widget.isAlignTop = true;\n            widget.isAlignLeft = true;\n            widget.isAlignRight = true;\n\n            widget.left = 0;\n            widget.right = 0;\n            widget.top = 0;\n            widget.bottom = 0;\n            canvas.node.addChild(layerNode);\n        }\n    }\n\n    public getLayerNode(layerIndex:number):Node{\n        let canvas = find('Canvas');\n        return canvas.children[layerIndex];\n    }\n\n    public showUI(uiCls: any, cb?: Function,target?:any):any {\n        let ui = new uiCls() as UIController;\n        let resArr = ui.getRes() || [];\n        resArr.push(ui.prefabUrl as never);\n        loader.loadResArray(resArr, () => {\n            let node:Node = null;\n            if(ui.prefabUrl){\n                let prefab = loader.getRes(ui.prefabUrl);\n                node = instantiate(prefab);\n            }\n            else{\n                //special for empty ui\n                node = new Node();\n                node.layer = find('Canvas').layer;\n\n                //keep size\n                let widget = node.addComponent(Widget);\n                widget.isAlignBottom = true;\n                widget.isAlignTop = true;\n                widget.isAlignLeft = true;\n                widget.isAlignRight = true;\n    \n                widget.left = 0;\n                widget.right = 0;\n                widget.top = 0;\n                widget.bottom = 0;\n            }\n\n            ui.setup(node);\n        });\n        return ui;\n    }\n}\n"]}