{"version":3,"sources":["file:///Users/mu/Desktop/Creator3.5.2_3D_ModelRimLight/assets/src/UI_RimLight_HUD.ts"],"names":["UI_RimLight_HUD","Color","UILayoutRimLightHUD","UIController","UILayer","PlayerCtrl","constructor","HUD","_color","layout","node","getComponent","onCreated","chkEnabled","isChecked","inst","rimLightEnabled","rimColor","rimLightColor","R","progress","x","G","y","B","z","A","w","refreshSliderValueShow","onSlideEvent","onRimLightChanged","onToggleEvent","toggle","slider","ValueR","string","ValueG","ValueB","ValueA","colorDisplay","color"],"mappings":"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","sourcesContent":["import { _decorator, director, instantiate, LabelComponent, ToggleComponent, SliderComponent, color, Color } from 'cc';\nimport { UILayoutRimLightHUD } from './UILayout_RimLight_HUD';\nimport { UIController } from '../../../qfw/base/UIController';\nimport { UILayer, UIMgr } from '../../../qfw/base/UIMgr';\nimport { PlayerCtrl } from '../../../qfw/components/PlayerCtrl';\n\nexport class UI_RimLight_HUD extends UIController {\n\n    constructor() {\n        super('scenes/rim_light/hud/ui_rim_light_hud', UILayer.HUD);\n    }\n\n    private get layout(): UILayoutRimLightHUD {\n        return this.node.getComponent(UILayoutRimLightHUD);\n    }\n\n    protected onCreated() {\n\n        this.layout.chkEnabled.isChecked = PlayerCtrl.inst.rimLightEnabled;\n\n        let rimColor = PlayerCtrl.inst.rimLightColor;\n        this.layout.R.progress = rimColor.x;\n        this.layout.G.progress = rimColor.y;\n        this.layout.B.progress = rimColor.z;\n        this.layout.A.progress = rimColor.w;\n        this.refreshSliderValueShow();\n\n        this.onSlideEvent(this.layout.R, this.onRimLightChanged, this);\n        this.onSlideEvent(this.layout.G, this.onRimLightChanged, this);\n        this.onSlideEvent(this.layout.B, this.onRimLightChanged, this);\n        this.onSlideEvent(this.layout.A, this.onRimLightChanged, this);\n\n        this.onToggleEvent(this.layout.chkEnabled, (toggle: ToggleComponent) => {\n            PlayerCtrl.inst.rimLightEnabled = toggle.isChecked;\n        });\n    }\n\n    onRimLightChanged(slider: SliderComponent) {\n        let rimColor = PlayerCtrl.inst.rimLightColor;\n        rimColor.x = this.layout.R.progress;\n        rimColor.y = this.layout.G.progress;\n        rimColor.z = this.layout.B.progress;\n        rimColor.w = this.layout.A.progress;\n        PlayerCtrl.inst.rimLightColor = rimColor;\n        this.refreshSliderValueShow();\n    }\n\n    private _color = new Color();\n    refreshSliderValueShow(){\n        this.layout.ValueR.string = '' + ~~(this.layout.R.progress * 255);\n        this.layout.ValueG.string = '' + ~~(this.layout.G.progress * 255);\n        this.layout.ValueB.string = '' + ~~(this.layout.B.progress * 255);\n        this.layout.ValueA.string = '' + ~~(this.layout.A.progress * 255);\n        this._color.x = this.layout.R.progress;\n        this._color.y = this.layout.G.progress;\n        this._color.z = this.layout.B.progress;\n        this._color.w = this.layout.A.progress;\n        this.layout.colorDisplay.color = this._color;\n    }\n}"]}