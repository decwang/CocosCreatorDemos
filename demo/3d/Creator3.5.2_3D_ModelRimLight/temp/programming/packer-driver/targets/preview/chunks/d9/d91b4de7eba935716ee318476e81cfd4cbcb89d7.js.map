{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/3d/Creator3.5.2_3D_ModelRimLight/assets/src/UIController.ts"],"names":["AutoEventHandler","UIController","_decorator","Component","Node","find","Button","EventHandler","game","Toggle","Slider","UIMgr","ccclass","property","ClickEventAgent","start","onButtonClicked","evt","customEventData","btn","target","getComponent","clickEvents","i","length","h","cb","args","apply","onCheckEvent","toggle","checkEvents","onSlideEvent","slider","slideEvents","_handlers","on","event","once","push","off","splice","dispose","constructor","prefabUrl","layer","_controllerId","_prefabUrl","_layer","node","_idBase","_controllers","getRes","hideAll","hide","setup","parent","inst","getLayerNode","addChild","onCreated","removeFromParent","destroy","onDispose","onButtonEvent","relativeNodePath","buttonNode","agent","addComponent","handler","component","offButtonEvent","onToggleEvent","offToggleEvent","offSlideEvent"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, Texture2D, loader, instantiate, find, Button, EventHandler, EventTouch, game, Toggle, Slider } from 'cc';\nimport { UIMgr } from './UIMgr';\n\nconst { ccclass, property } = _decorator;\n\n//按钮事件监听器\n@ccclass('ClickEventAgent')\nexport class ClickEventAgent extends Component {\n    start() {\n        // Your initialization goes here.\n    }\n\n    onButtonClicked(evt: EventTouch, customEventData) {\n        let btn = (evt.target as Node).getComponent(Button);\n        let clickEvents = btn.clickEvents;\n        for (let i = 0; i < clickEvents.length; ++i) {\n            let h = clickEvents[i];\n            if (h.customEventData == customEventData) {\n                let cb = h['$cb$'];\n                let target = h['$target$']\n                let args = h['$args$'];\n                cb.apply(target, [btn, args]);\n            }\n        }\n    }\n\n    onCheckEvent(toggle: Toggle, customEventData) {\n        let checkEvents = toggle.checkEvents;\n        for (let i = 0; i < checkEvents.length; ++i) {\n            let h = checkEvents[i];\n            if (h.customEventData == customEventData) {\n                let cb = h['$cb$'];\n                let target = h['$target$']\n                let args = h['$args$'];\n                cb.apply(target, [toggle, args]);\n            }\n        }\n    }\n\n    onSlideEvent(slider: Slider, customEventData) {\n        let slideEvents = slider.slideEvents;\n        for (let i = 0; i < slideEvents.length; ++i) {\n            let h = slideEvents[i];\n            if (h.customEventData == customEventData) {\n                let cb = h['$cb$'];\n                let target = h['$target$']\n                let args = h['$args$'];\n                cb.apply(target, [slider, args]);\n            }\n        }\n    }\n\n}\n\n//自动管理事件，将在UI销毁时自动清理\nexport class AutoEventHandler {\n    private _handlers = [];\n    on(event: string, cb: Function, target?: any, once?: boolean) {\n        this._handlers.push({\n            event: event,\n            cb: cb,\n            target: target,\n            once: once\n        });\n        game.on(event, cb, target, once);\n    }\n\n    off(event: string, cb: Function, target?: any, once?: boolean) {\n        game.off(event, cb, target);\n        for (let i = 0; i < this._handlers.length; ++i) {\n            let h = this._handlers[i];\n            if (h.event == event && h.cb == cb && h.target == target && h.once == once) {\n                this._handlers.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    dispose() {\n        for (let i = 0; i < this._handlers.length; ++i) {\n            let h = this._handlers[i];\n            game.off(h.event, h.cb, h.target);\n        }\n    }\n}\n\nexport class UIController extends AutoEventHandler {\n    private static _idBase = 1000;\n\n    private static _controllers: UIController[] = [];\n    private _controllerId: number = 0;\n    private _prefabUrl: string;\n    private _layer: number;\n    protected node: Node;\n    constructor(prefabUrl: string, layer: number) {\n        super();\n        this._prefabUrl = prefabUrl;\n        this._layer = layer;\n        this._controllerId = UIController._idBase++;\n        UIController._controllers.push(this);\n    }\n\n    public get prefabUrl(): string {\n        return this._prefabUrl;\n    }\n\n    public get layer(): number {\n        return this._layer;\n    }\n\n    public getRes(): [] {\n        return [];\n    }\n\n    public static hideAll() {\n        while (this._controllers.length) {\n            this._controllers[0].hide();\n        }\n    }\n\n    public setup(node: Node) {\n        this.node = node;\n        let parent = UIMgr.inst.getLayerNode(this.layer) || find('Canvas');\n        parent.addChild(node);\n        //结点创建完毕，调用子类的处理函数。\n        this.onCreated();\n    }\n\n    public hide() {\n        this.node.removeFromParent();\n        this.node.destroy();\n        for (let i = 0; i < UIController._controllers.length; ++i) {\n            if (UIController._controllers[i] == this) {\n                UIController._controllers.splice(i, 1);\n                break;\n            }\n        }\n        this.dispose();\n        this.onDispose();\n    }\n\n    //添加按钮事件\n    //cb:(btn:Button,args:any)=>void\n    onButtonEvent(relativeNodePath: string | Node | Button, cb: Function, target?: any, args?: any) {\n\n        let buttonNode: Node = null;\n        if (relativeNodePath instanceof Node) {\n            buttonNode = relativeNodePath;\n        }\n        else if (relativeNodePath instanceof Button) {\n            buttonNode = relativeNodePath.node;\n        }\n        else {\n            buttonNode = find(relativeNodePath, this.node);\n        }\n\n        if (!buttonNode) {\n            return null;\n        }\n\n        //添加转发器\n        let agent = this.node.getComponent(ClickEventAgent);\n        if (!agent) {\n            agent = this.node.addComponent(ClickEventAgent);\n        }\n\n        let btn = buttonNode.getComponent(Button);\n        let clickEvents = btn.clickEvents;\n        let handler = new EventHandler();\n        handler.target = this.node;\n        handler.component = 'ClickEventAgent';\n        handler.handler = 'onButtonClicked';\n        handler.customEventData = '' + UIController._idBase++;\n\n        //附加额外信息 供事件转发使用\n        handler['$cb$'] = cb;\n        handler['$target$'] = target;\n        handler['$args$'] = args;\n\n        clickEvents.push(handler);\n        btn.clickEvents = clickEvents;\n    }\n\n    //移除按钮事件\n    offButtonEvent(relativeNodePath: string | Node | Button, cb: Function, target: any) {\n        let buttonNode: Node = null;\n        if (relativeNodePath instanceof Node) {\n            buttonNode = relativeNodePath;\n\n        }\n        else if (relativeNodePath instanceof Button) {\n            buttonNode = relativeNodePath.node;\n        }\n        else {\n            buttonNode = find(relativeNodePath, this.node);\n        }\n\n        if (!buttonNode) {\n            return; ``\n        }\n\n        //添加转发器\n        let agent = this.node.getComponent(ClickEventAgent);\n        if (!agent) {\n            return;\n        }\n        let btn = buttonNode.getComponent(Button);\n        if (!btn) {\n            return;\n        }\n        let clickEvents = btn.clickEvents;\n        for (let i = 0; i < clickEvents.length; ++i) {\n            let h = clickEvents[i];\n            if (h['$cb$'] == cb && h['$target$'] == target) {\n                clickEvents.splice(i, 1);\n                btn.clickEvents = clickEvents;\n                break;\n            }\n        }\n    }\n\n    //添加Toggle事件\n    //cb:(btn:Toggle,args:any)=>void\n    onToggleEvent(relativeNodePath: string | Node | Toggle, cb: Function, target?: any, args?: any) {\n        let buttonNode: Node = null;\n        if (relativeNodePath instanceof Node) {\n            buttonNode = relativeNodePath;\n        }\n        else if (relativeNodePath instanceof Toggle) {\n            buttonNode = relativeNodePath.node;\n        }\n        else {\n            buttonNode = find(relativeNodePath, this.node);\n        }\n\n        if (!buttonNode) {\n            return null;\n        }\n\n        //添加转发器\n        let agent = this.node.getComponent(ClickEventAgent);\n        if (!agent) {\n            agent = this.node.addComponent(ClickEventAgent);\n        }\n\n        let btn = buttonNode.getComponent(Toggle);\n        let checkEvents = btn.checkEvents;\n        let handler = new EventHandler();\n        handler.target = this.node;\n        handler.component = 'ClickEventAgent';\n        handler.handler = 'onCheckEvent';\n        handler.customEventData = '' + UIController._idBase++;\n\n        //附加额外信息 供事件转发使用\n        handler['$cb$'] = cb;\n        handler['$target$'] = target;\n        handler['$args$'] = args;\n\n        checkEvents.push(handler);\n        btn.checkEvents = checkEvents;\n    }\n\n    //移除按钮事件\n    offToggleEvent(relativeNodePath: string | Node | Toggle, cb: Function, target: any) {\n        let buttonNode: Node = null;\n        if (relativeNodePath instanceof Node) {\n            buttonNode = relativeNodePath;\n        }\n        else if (relativeNodePath instanceof Toggle) {\n            buttonNode = relativeNodePath.node;\n        }\n        else {\n            buttonNode = find(relativeNodePath, this.node);\n        }\n\n        if (!buttonNode) {\n            return null;\n        }\n\n        //添加转发器\n        let agent = this.node.getComponent(ClickEventAgent);\n        if (!agent) {\n            return;\n        }\n        let btn = buttonNode.getComponent(Toggle);\n        if (!btn) {\n            return;\n        }\n        let checkEvents = btn.checkEvents;\n        for (let i = 0; i < checkEvents.length; ++i) {\n            let h = checkEvents[i];\n            if (h['$cb$'] == cb && h['$target$'] == target) {\n                checkEvents.splice(i, 1);\n                btn.checkEvents = checkEvents;\n                break;\n            }\n        }\n    }\n\n\n    //添加Slide事件\n    //cb:(btn:Toggle,args:any)=>void\n    onSlideEvent(relativeNodePath: string | Node | Slider, cb: Function, target?: any, args?: any) {\n        let buttonNode: Node = null;\n        if (relativeNodePath instanceof Node) {\n            buttonNode = relativeNodePath;\n        }\n        else if (relativeNodePath instanceof Slider) {\n            buttonNode = relativeNodePath.node;\n        }\n        else {\n            buttonNode = find(relativeNodePath, this.node);\n        }\n\n        if (!buttonNode) {\n            return null;\n        }\n\n        //添加转发器\n        let agent = this.node.getComponent(ClickEventAgent);\n        if (!agent) {\n            agent = this.node.addComponent(ClickEventAgent);\n        }\n\n        let btn = buttonNode.getComponent(Slider);\n        let slideEvents = btn.slideEvents;\n        let handler = new EventHandler();\n        handler.target = this.node;\n        handler.component = 'ClickEventAgent';\n        handler.handler = 'onSlideEvent';\n        handler.customEventData = '' + UIController._idBase++;\n\n        //附加额外信息 供事件转发使用\n        handler['$cb$'] = cb;\n        handler['$target$'] = target;\n        handler['$args$'] = args;\n\n        slideEvents.push(handler);\n        btn.slideEvents = slideEvents;\n    }\n\n    //移除Slide事件\n    offSlideEvent(relativeNodePath: string | Node | Slider, cb: Function, target: any) {\n        let buttonNode: Node = null;\n        if (relativeNodePath instanceof Node) {\n            buttonNode = relativeNodePath;\n        }\n        else if (relativeNodePath instanceof Slider) {\n            buttonNode = relativeNodePath.node;\n        }\n        else {\n            buttonNode = find(relativeNodePath, this.node);\n        }\n\n        if (!buttonNode) {\n            return null;\n        }\n\n        //添加转发器\n        let agent = this.node.getComponent(ClickEventAgent);\n        if (!agent) {\n            return;\n        }\n        let btn = buttonNode.getComponent(Slider);\n        if (!btn) {\n            return;\n        }\n        let slideEvents = btn.slideEvents;\n        for (let i = 0; i < slideEvents.length; ++i) {\n            let h = slideEvents[i];\n            if (h['$cb$'] == cb && h['$target$'] == target) {\n                slideEvents.splice(i, 1);\n                btn.slideEvents = slideEvents;\n                break;\n            }\n        }\n    }\n\n    //子类的所有操作，需要在这个函数之后。\n    protected onCreated() { }\n    //销毁\n    protected onDispose() { }\n}"]}