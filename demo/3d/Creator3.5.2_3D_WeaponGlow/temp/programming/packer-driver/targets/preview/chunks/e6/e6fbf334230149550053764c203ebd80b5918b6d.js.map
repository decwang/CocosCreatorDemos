{"version":3,"sources":["file:///Users/mu/work/gitee/CocosCreatorDemos/demo/3d/Creator3.5.2_3D_WeaponGlow/assets/res/src/PlayerCtrl.ts"],"names":["_decorator","Component","SkeletalAnimationComponent","SkinningModelComponent","v4","ccclass","property","PlayerCtrl","type","_isLoop","_anim","_curentAnimIndex","_rimColor","_rimEnabled","inst","_inst","start","node","getComponent","i","clips","length","clip","defaultClip","rimLightColor","rimLightEnabled","enable","rimColor","value","x","y","z","w","body","sharedMaterial","setProperty","weapon","isLoop","v","animState","getAnimationState","curAnimName","repeatCount","Infinity","playNext","playAnim","playPrev","animName","cb","play","name"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, systemEvent, SystemEvent, EventKeyboard, macro, Vec3, Quat, quat, v3, tween, geometry, director, SkeletalAnimationComponent, Terrain, find, AnimationState, AnimationClip, SkinningModelComponent, v4, Vec4 } from 'cc';\nimport { FollowCamera } from './FollowCamera';\nconst { ccclass, property } = _decorator;\n\n@ccclass('PlayerCtrl')\nexport class PlayerCtrl extends Component {\n    /* class member could be defined like this */\n    // dummy = '';\n\n    /* use `property` decorator if your want the member to be serializable */\n    @property({ type: SkinningModelComponent })\n    body: SkinningModelComponent = null;\n\n    @property({ type: SkinningModelComponent })\n    weapon: SkinningModelComponent = null;\n\n    private static _inst: PlayerCtrl;\n    public static get inst(): PlayerCtrl {\n        return this._inst;\n    }\n\n    private _isLoop: boolean = true;\n    private _anim: SkeletalAnimationComponent;\n    private _curentAnimIndex: number = 0;\n\n    start() {\n        PlayerCtrl._inst = this;\n        this._anim = this.node.getComponent(SkeletalAnimationComponent);\n\n        for (let i = 0; i < this._anim.clips.length; ++i) {\n            let clip = this._anim[i];\n            if (clip == this._anim.defaultClip) {\n                this._curentAnimIndex = i;\n            }\n        }\n        this.rimLightColor = this._rimColor;\n    }\n\n    private _rimColor = v4(0, 0, 0, 0);\n    private _rimEnabled = false;\n    public set rimLightEnabled(enable: boolean) {\n        this._rimEnabled = enable;\n        this.rimLightColor = this._rimColor;\n    }\n\n    public get rimLightEnabled(): boolean {\n        return this._rimEnabled;\n    }\n\n    set rimLightColor(rimColor: Vec4) {\n        this._rimColor = rimColor;\n        let value = v4(rimColor.x, rimColor.y, rimColor.z, this._rimEnabled? rimColor.w : 0);\n        this.body.sharedMaterial.setProperty('rimColor', value);\n        this.weapon.sharedMaterial.setProperty('rimColor', value)\n    }\n\n    get rimLightColor(): Vec4 {\n        return this._rimColor;\n    }\n\n    public set isLoop(v: boolean) {\n        this._isLoop = v;\n        let animState = this._anim.getAnimationState(this.curAnimName);\n        animState.repeatCount = v ? Infinity : 1;\n    }\n\n    public get isLoop(): boolean {\n        return this._isLoop;\n    }\n\n    playNext() {\n        this._curentAnimIndex = (this._curentAnimIndex + 1) % this._anim.clips.length;\n        this.playAnim(this.curAnimName, this._isLoop);\n    }\n\n    playPrev() {\n        this._curentAnimIndex = (this._curentAnimIndex - 1 + this._anim.clips.length) % this._anim.clips.length;\n        this.playAnim(this.curAnimName, this._isLoop);\n    }\n\n    playAnim(animName, isLoop?: boolean, cb?: Function) {\n        let animState = this._anim.getAnimationState(animName);\n        animState.repeatCount = isLoop ? Infinity : 1;\n        this._anim.play(animName);\n    }\n\n    public get curAnimName(): string {\n        let clip = this._anim.clips[this._curentAnimIndex];\n        return clip.name;\n    }\n}\n"]}